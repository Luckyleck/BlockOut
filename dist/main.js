/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _scripts_game_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/game.js */ \"./src/scripts/game.js\");\n\n\n// document.addEventListener(\"DOMContentLoaded\", () => {\n//     console.log(\"hello world\")\n//     const main = document.getElementById(\"main\");\n//     new Example(main);\n// });\n\n// var gridSize = 25;\n// var lineColor = \"#ccc\";\n\n// // Draw the grid lines\n// c.beginPath();\n// for (var x = 0; x <= canvas.width; x += gridSize) {\n//   c.moveTo(x, 0);\n//   c.lineTo(x, canvas.height);\n// }\n// for (var y = 0; y <= canvas.height; y += gridSize) {\n//   c.moveTo(0, y);\n//   c.lineTo(canvas.width, y);\n// }\n// c.strokeStyle = lineColor;\n// c.stroke();\n\n// console.log('hello')//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQXNDO0FBQ0Y7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NwbGVlZi8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCb2FyZCBmcm9tIFwiLi9zY3JpcHRzL2JvYXJkLmpzXCJcclxuaW1wb3J0IEdhbWUgZnJvbSBcIi4vc2NyaXB0cy9nYW1lLmpzXCJcclxuLy8gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT4ge1xyXG4vLyAgICAgY29uc29sZS5sb2coXCJoZWxsbyB3b3JsZFwiKVxyXG4vLyAgICAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcclxuLy8gICAgIG5ldyBFeGFtcGxlKG1haW4pO1xyXG4vLyB9KTtcclxuXHJcbi8vIHZhciBncmlkU2l6ZSA9IDI1O1xyXG4vLyB2YXIgbGluZUNvbG9yID0gXCIjY2NjXCI7XHJcblxyXG4vLyAvLyBEcmF3IHRoZSBncmlkIGxpbmVzXHJcbi8vIGMuYmVnaW5QYXRoKCk7XHJcbi8vIGZvciAodmFyIHggPSAwOyB4IDw9IGNhbnZhcy53aWR0aDsgeCArPSBncmlkU2l6ZSkge1xyXG4vLyAgIGMubW92ZVRvKHgsIDApO1xyXG4vLyAgIGMubGluZVRvKHgsIGNhbnZhcy5oZWlnaHQpO1xyXG4vLyB9XHJcbi8vIGZvciAodmFyIHkgPSAwOyB5IDw9IGNhbnZhcy5oZWlnaHQ7IHkgKz0gZ3JpZFNpemUpIHtcclxuLy8gICBjLm1vdmVUbygwLCB5KTtcclxuLy8gICBjLmxpbmVUbyhjYW52YXMud2lkdGgsIHkpO1xyXG4vLyB9XHJcbi8vIGMuc3Ryb2tlU3R5bGUgPSBsaW5lQ29sb3I7XHJcbi8vIGMuc3Ryb2tlKCk7XHJcblxyXG4vLyBjb25zb2xlLmxvZygnaGVsbG8nKSJdLCJuYW1lcyI6WyJCb2FyZCIsIkdhbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/ai.js":
/*!***************************!*\
  !*** ./src/scripts/ai.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n\n\nconst canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\nclass AI {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.alive = true;\n    this.radius = 15;\n    this.row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    this.col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    this.victory = false;\n    this.currentPlace = this.getPlayerTile();\n    this.lastKey = \"\";\n  }\n  makeMove() {\n    const directions = [\"north\", \"south\", \"east\", \"west\"];\n    let direction = directions[Math.floor(Math.random() * directions.length)];\n    var nowTile;\n    var nextTile;\n    switch (direction) {\n      case \"north\":\n        // this.keys.ArrowUp.pressed = true;\n        this.lastKey = \"north\";\n        nowTile = this.getPlayerTile();\n        nextTile = this.getAnyTileXY(this.x, this.y - 50);\n        if (this.isTile(this.x, this.y - 50) && nextTile.occupied === false && nextTile.health > 0) {\n          nowTile.occupied = false;\n          nextTile.occupied = true;\n          this.y -= 50;\n        }\n        if (this.alive && this.isDead()) {\n          this.alive = false;\n        }\n        break;\n      case \"west\":\n        // this.keys.ArrowLeft.pressed = true;\n        this.lastKey = \"west\";\n        nowTile = this.getPlayerTile();\n        nextTile = this.getAnyTileXY(this.x - 50, this.y);\n        if (this.isTile(this.x - 50, this.y) && nextTile.occupied === false && nextTile.health > 0) {\n          nowTile.occupied = false;\n          nextTile.occupied = true;\n          this.x -= 50;\n        }\n        if (this.alive && this.isDead()) {\n          this.alive = false;\n        }\n        break;\n      case \"south\":\n        // this.keys.ArrowDown.pressed = true;\n        this.lastKey = \"south\";\n        nowTile = this.getPlayerTile();\n        nextTile = this.getAnyTileXY(this.x, this.y + 50);\n        if (this.isTile(this.x, this.y + 50) && nextTile.occupied === false && nextTile.health > 0) {\n          nowTile.occupied = false;\n          nextTile.occupied = true;\n          this.y += 50;\n        }\n        if (this.alive && this.isDead()) {\n          this.alive = false;\n        }\n        break;\n      case \"east\":\n        // this.keys.ArrowRight.pressed = true;\n        this.lastKey = \"east\";\n        nowTile = this.getPlayerTile();\n        nextTile = this.getAnyTileXY(this.x + 50, this.y);\n        if (this.isTile(this.x + 50, this.y) && nextTile.occupied === false && nextTile.health > 0) {\n          nowTile.occupied = false;\n          nextTile.occupied = true;\n          this.x += 50;\n        }\n        if (this.alive && this.isDead()) {\n          this.alive = false;\n        }\n        break;\n    }\n  }\n  break() {\n    switch (this.lastKey) {\n      case \"north\":\n        if (this.isTile(this.x, this.y - 50)) {\n          this.breakTile(this.x, this.y - 50);\n        }\n        break;\n      case \"west\":\n        if (this.isTile(this.x - 50, this.y)) {\n          this.breakTile(this.x - 50, this.y);\n        }\n        break;\n      case \"south\":\n        if (this.isTile(this.x, this.y + 50)) {\n          this.breakTile(this.x, this.y + 50);\n        }\n        break;\n      case \"east\":\n        if (this.isTile(this.x + 50, this.y)) {\n          this.breakTile(this.x + 50, this.y);\n        }\n        break;\n    }\n  }\n  draw() {\n    c.beginPath();\n    c.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    c.fillStyle = \"yellow\";\n    c.fill();\n    c.closePath();\n  }\n  currentTile() {\n    let row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    // console.log([row, col]);\n    return [row, col];\n  }\n  getPlayerTile() {\n    let row = this.currentTile()[0];\n    let col = this.currentTile()[1];\n    // console.log([row, col]);\n    // console.log(Board.map[row][col]);\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTile(row, col) {\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTileXY(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n\n  // breakTiles\n\n  breakTile(x, y) {\n    let pos = this.xyConvert(x, y);\n    let row = pos[0];\n    let col = pos[1];\n    let tile = this.getAnyTile(row, col);\n    if (tile.health > 0) {\n      tile.health -= 1;\n      if (tile.health === 0) {\n        tile.visible = false;\n        if (tile.occupied) {\n          this.victory = true;\n        }\n      }\n    }\n    // console.log(tile);\n  }\n\n  // Tile existence logic (use for boundary detection)\n\n  isTile(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    if (_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col] instanceof _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  xyConvert(x, y) {\n    let row = Math.floor((y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1);\n    return [row, col];\n  }\n\n  // Player dead logic\n\n  isDead() {\n    let tile = this.getPlayerTile();\n\n    // console.log(tile);\n    if (tile.health === 0) {\n      this.alive = false;\n    } else {\n      this.alive = true;\n    }\n  }\n  reset() {\n    this.x = undefined;\n    this.y = undefined;\n    this.dx = undefined;\n    this.dy = undefined;\n    this.radius = undefined;\n    this.row = undefined;\n    this.col = undefined;\n    this.currentPlace = undefined;\n    this.alive = undefined;\n    this.victory = undefined;\n    this.lastkey = undefined;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (AI);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/ai.js\n");

/***/ }),

/***/ "./src/scripts/board.js":
/*!******************************!*\
  !*** ./src/scripts/board.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n/* harmony import */ var _boundary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./boundary.js */ \"./src/scripts/boundary.js\");\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./player.js */ \"./src/scripts/player.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n// import grass from './img/grass.png'\n\nconst canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\n\n// c.fillRect(20, 20, 20, 20)\n\nclass Board {\n  // Map total Width and Height\n\n  // Map Start x and y\n  //300\n  //100\n\n  // Map End x and y\n\n  // Playfield Width and Height\n\n  // Playfield Start x and y\n\n  constructor() {\n    // this.tiles = []\n    for (let i = 0; i < Board.map.length; i++) {\n      for (let j = 0; j < Board.map[i].length; j++) {\n        if (Board.map[i][j] === \" \") {\n          Board.map[i][j] = new _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](i,\n          // row\n          j // col\n          );\n        } else {\n          Board.map[i][j] = new _boundary_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](i,\n          // row\n          j // col\n          );\n        }\n      }\n    }\n  }\n\n  draw() {\n    const startX = canvas.width / 2 / 2 / 2;\n    const startY = canvas.height / 2 / 2 / 2;\n    Board.map.forEach(row => {\n      row.forEach(tile => {\n        // Col first, then row\n        if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && tile.health === 3) {\n          //   console.log(tile.row, tile.col);\n          c.shadowBlur = 10;\n          c.shadowColor = \"black\";\n          c.fillStyle = \"green\";\n          c.fillRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n          c.lineWidth = 2;\n          c.strokeStyle = \"black\"; // outline color\n          c.strokeRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n          // c.drawImage(grass,startX + (tile.col * tile.size), startY + (tile.row * tile.size), tile.size, tile.size)\n        } else if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && tile.health === 2) {\n          c.shadowBlur = 10;\n          c.shadowColor = \"black\";\n          c.fillStyle = \"#80461B\";\n          c.fillRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n          c.lineWidth = 2;\n          c.strokeStyle = \"black\";\n          c.strokeRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n        } else if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && tile.health === 1) {\n          c.shadowBlur = 10;\n          c.shadowColor = \"black\";\n          c.fillStyle = \"#362419\";\n          c.fillRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n          c.lineWidth = 2;\n          c.strokeStyle = \"black\";\n          c.strokeRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n        } else if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && tile.health === 0) {\n          c.globalAlpha = 0.0;\n          c.fillStyle = \"#ffebcd\"; // color of background\n          c.fillRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n          c.lineWidth = 2;\n          c.strokeStyle = \"black\";\n          c.strokeRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n          c.globalAlpha = 1;\n        } else if (tile instanceof _boundary_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n          c.shadowBlur = 8;\n          c.shadowColor = \"white\";\n          c.fillStyle = \"grey\";\n          c.fillRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n          c.lineWidth = 2;\n          c.strokeStyle = \"black\";\n          c.strokeRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n          c.shadowBlur = 0;\n          c.shadowColor = undefined;\n        }\n      });\n    });\n  }\n  reset() {\n    for (let i = 0; i < Board.map.length; i++) {\n      for (let j = 0; j < Board.map[i].length; j++) {\n        if (Board.map[i][j] instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n          Board.map[i][j] = \" \";\n        } else {\n          Board.map[i][j] = \"-\";\n        }\n      }\n    }\n  }\n\n  //   shrink() {\n  //     // Remove the first and last row\n  //     Board.map.shift();\n  //     Board.map.pop();\n\n  //     // Remove the first and last column from each remaining row\n  //     for (let i = 0; i < Board.map.length; i++) {\n  //       Board.map[i].shift();\n  //       Board.map[i].pop();\n  //     }\n\n  //     // Update the map width and height to reflect the new size\n  //     Board.mapWidth -= Tile.size * 2;\n  //     Board.mapHeight -= Tile.size * 2;\n\n  //     // Update the playfield width and height to reflect the new size\n  //     Board.playFieldWidth = Board.mapWidth - Tile.size * 2;\n  //     Board.playFieldHeight = Board.mapHeight - Tile.size * 2;\n\n  //     // Update the playfield start x and y to reflect the new size\n  //     Board.playFieldStartX = Board.gameFieldX + Tile.size;\n  //     Board.playFieldStartY = Board.gameFieldY + Tile.size;\n\n  //     // Create a new border around the playfield\n  //     for (let i = 0; i < Board.map.length; i++) {\n  //       if (i === 0 || i === Board.map.length - 1) {\n  //         for (let j = 0; j < Board.map[i].length; j++) {\n  //           Board.map[i][j] = new Boundary(i, j);\n  //         }\n  //       } else {\n  //         Board.map[i][0] = new Boundary(i, 0);\n  //         Board.map[i][Board.map[i].length - 1] = new Boundary(\n  //           i,\n  //           Board.map[i].length - 1\n  //         );\n  //       }\n  //     }\n\n  //     this.draw();\n  //   }\n}\n_defineProperty(Board, \"ogmap\", [[\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\"], [\"-\", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \"-\"], [\"-\", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \"-\"], [\"-\", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \"-\"], [\"-\", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \"-\"], [\"-\", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \"-\"], [\"-\", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \"-\"], [\"-\", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \"-\"], [\"-\", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \"-\"], [\"-\", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \"-\"], [\"-\", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \"-\"], [\"-\", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \"-\"], [\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\"]]);\n_defineProperty(Board, \"mapn_defineProperty(Board, \"mapWidth\", Board.map[0].length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size);\n_defineProperty(Board, \"mapHeight\", Board.map.length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size);\n_defineProperty(Board, \"gameFieldX\", canvas.width / 2 / 2 / 2);\n_defineProperty(Board, \"gameFieldY\", canvas.height / 2 / 2 / 2);\n_defineProperty(Board, \"gameFieldEndX\", Board.map[0].length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 3);\n_defineProperty(Board, \"gameFieldEndY\", Board.map.length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2);\n_defineProperty(Board, \"playFieldWidth\", Board.mapWidth - _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2);\n_defineProperty(Board, \"playFieldHeight\", Board.mapHeight - _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2);\n_defineProperty(Board, \"playFieldStartX\", Board.gameFieldX + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size);\n_defineProperty(Board, \"playFieldStartY\", Board.gameFieldY + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size);\nlet mouse = {\n  x: undefined,\n  y: undefined\n};\nwindow.addEventListener('mousemove', function (event) {\n  mouse.x = event.x;\n  mouse.y = event.y;\n  // console.log(mouse)\n});\n\nwindow.addEventListener(\"mousemove\", function (event) {\n  const gameFieldX = canvas.width / 4;\n  const gameFieldY = canvas.height / 8;\n  const tileWidth = Board.map[0][0].size;\n  const tileHeight = Board.map[0][0].size;\n  const mouseX = event.clientX - canvas.getBoundingClientRect().left;\n  const mouseY = event.clientY - canvas.getBoundingClientRect().top;\n  const tileX = Math.floor((mouseX - gameFieldX) / tileWidth);\n  const tileY = Math.floor((mouseY - gameFieldY) / tileHeight);\n  if (tileX >= 0 && tileX < Board.map[0].length && tileY >= 0 && tileY < Board.map.length) {\n    const tile = Board.map[tileY][tileX];\n    //   console.log(tile);\n  }\n});\n\n// var gridSize = 25;\n// var lineColor = \"#ccc\";\n\n// // Draw the grid lines\n// c.beginPath();\n// for (var x = 0; x <= canvas.width; x += gridSize) {\n//   c.moveTo(x, 0);\n//   c.lineTo(x, canvas.height);\n// }\n// for (var y = 0; y <= canvas.height; y += gridSize) {\n//   c.moveTo(0, y);\n//   c.lineTo(canvas.width, y);\n// }\n// c.strokeStyle = lineColor;\n// c.stroke();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Board);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/board.js\n");

/***/ }),

/***/ "./src/scripts/boundary.js":
/*!*********************************!*\
  !*** ./src/scripts/boundary.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nclass Boundary {\n  constructor(row, col) {\n    this.row = row;\n    this.col = col;\n    this.size = Boundary.size;\n    this.occupied = false;\n  }\n}\n_defineProperty(Boundary, \"size\", 50);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Boundary);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9ib3VuZGFyeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsUUFBUSxDQUFDO0VBR1hDLFdBQVdBLENBQUNDLEdBQUcsRUFBQ0MsR0FBRyxFQUFFO0lBQ2pCLElBQUksQ0FBQ0QsR0FBRyxHQUFHQSxHQUFHO0lBQ2QsSUFBSSxDQUFDQyxHQUFHLEdBQUdBLEdBQUc7SUFDZCxJQUFJLENBQUNDLElBQUksR0FBR0osUUFBUSxDQUFDSSxJQUFJO0lBQ3pCLElBQUksQ0FBQ0MsUUFBUSxHQUFHLEtBQUs7RUFDekI7QUFDSjtBQUFDQyxlQUFBLENBVEtOLFFBQVEsVUFDSSxFQUFFO0FBVXBCLCtEQUFlQSxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3BsZWVmLy4vc3JjL3NjcmlwdHMvYm91bmRhcnkuanM/MWYwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBCb3VuZGFyeSB7XG4gICAgc3RhdGljIHNpemUgPSA1MDtcblxuICAgIGNvbnN0cnVjdG9yKHJvdyxjb2wpIHtcbiAgICAgICAgdGhpcy5yb3cgPSByb3c7IFxuICAgICAgICB0aGlzLmNvbCA9IGNvbFxuICAgICAgICB0aGlzLnNpemUgPSBCb3VuZGFyeS5zaXplO1xuICAgICAgICB0aGlzLm9jY3VwaWVkID0gZmFsc2U7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBCb3VuZGFyeSJdLCJuYW1lcyI6WyJCb3VuZGFyeSIsImNvbnN0cnVjdG9yIiwicm93IiwiY29sIiwic2l6ZSIsIm9jY3VwaWVkIiwiX2RlZmluZVByb3BlcnR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/boundary.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player.js */ \"./src/scripts/player.js\");\n/* harmony import */ var _playertwo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./playertwo.js */ \"./src/scripts/playertwo.js\");\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n/* harmony import */ var _ai_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ai.js */ \"./src/scripts/ai.js\");\n/* harmony import */ var _play_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./play.js */ \"./src/scripts/play.js\");\n\n\n\n\n\n\nlet myAudio = document.querySelector(\"#audio\");\nconst canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\n\n//buttons\nconst spawnBtnPlayer = document.getElementById(\"spawn-btn-player\");\nconst spawnBtnAI = document.getElementById(\"spawn-btn-ai\");\nspawnBtnPlayer.addEventListener(\"click\", () => {\n  startPlayerGame();\n});\nspawnBtnAI.addEventListener(\"click\", () => {\n  startAiGame();\n});\nmyAudio.play();\nlet playerOne;\nlet playerTwo;\nlet board;\n\n// function reset(){\n//   playerOne = undefined\n//   playerTwo = undefined\n//   board = undefined\n// }\n\nfunction localAnimate(player1, player2, board) {\n  window.requestAnimationFrame(() => {\n    // c.clearRect(Board.gameFieldX, Board.gameFieldY, Board.gameFieldEndX - Board.gameFieldX, Board.gameFieldEndY - Board.gameFieldY);\n    c.clearRect(0, 0, canvas.width, canvas.height);\n    board.draw();\n    if (player1 && player2) {\n      if (player1.alive && !player2.victory) {\n        player1.draw();\n      } else {\n        c.font = \"200px Georgia\";\n        c.fillStyle = \"Orange\";\n        c.fillText(\"Blue Wins!\", canvas.width / 4, canvas.height / 2);\n        spawnBtnPlayer.style.display = \"block\"; // show the spawn button\n        spawnBtnAI.style.display = \"block\"; // show the spawn button\n        return; // stop the animation\n      }\n\n      if (player2.alive && !player1.victory) {\n        player2.draw();\n      } else {\n        c.font = \"200px Georgia\";\n        c.fillStyle = \"Orange\";\n        c.fillText(\"Red Wins!\", canvas.width / 4, canvas.height / 2);\n        spawnBtnPlayer.style.display = \"block\"; // show the spawn button\n        spawnBtnAI.style.display = \"block\"; // show the spawn button\n        return; // stop the animation\n      }\n    }\n\n    localAnimate(player1, player2, board);\n  });\n}\nfunction startPlayerGame() {\n  // debugger\n  spawnBtnPlayer.style.display = \"none\";\n  spawnBtnAI.style.display = \"none\";\n  if (board) {\n    board.reset();\n  }\n  if (playerOne) {\n    playerOne.reset();\n  }\n  if (playerTwo) {\n    playerTwo.reset();\n  }\n  board = undefined;\n  playerOne = undefined;\n  playerTwo = undefined;\n  board = new _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n  playerOne = new _player_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldX + _tile_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].size * 1.5, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldY + _tile_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].size * 1.5);\n  playerTwo = new _playertwo_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mapWidth + _tile_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].size * 1.5, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mapHeight + _tile_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].size / 2);\n  playerOne.currentPlace.occupied = true;\n  playerTwo.currentPlace.occupied = true;\n  console.log(playerOne, playerTwo);\n  localAnimate(playerOne, playerTwo, board);\n}\nfunction aiAnimate(player1, ai, board) {\n  window.requestAnimationFrame(() => {\n    // c.clearRect(Board.gameFieldX, Board.gameFieldY, Board.gameFieldEndX - Board.gameFieldX, Board.gameFieldEndY - Board.gameFieldY);\n    c.clearRect(0, 0, canvas.width, canvas.height);\n    board.draw();\n    if (player1 && ai) {\n      if (player1.alive && !ai.victory) {\n        player1.draw();\n      } else {\n        c.font = \"200px Georgia\";\n        c.fillStyle = \"Orange\";\n        c.fillText(\"Blue Wins!\", canvas.width / 4, canvas.height / 2);\n        spawnBtnAI.style.display = \"block\"; // show the spawn button\n        return; // stop the animation\n      }\n\n      if (ai.alive && !player1.victory) {\n        ai.draw();\n        ai.makeMove();\n        ai.makeMove();\n        ai.break();\n        ai.makeMove();\n      } else {\n        c.font = \"200px Georgia\";\n        c.fillStyle = \"Orange\";\n        c.fillText(\"Red Wins!\", canvas.width / 4, canvas.height / 2);\n        spawnBtnAI.style.display = \"block\"; // show the spawn button\n        return; // stop the animation\n      }\n    }\n\n    localAnimate(player1, ai, board);\n  });\n}\nfunction startAiGame() {\n  // debugger\n  spawnBtnAI.style.display = \"none\";\n  if (board) {\n    board.reset();\n  }\n  if (playerOne) {\n    playerOne.reset();\n  }\n  if (playerTwo) {\n    playerTwo.reset();\n  }\n  board = undefined;\n  playerOne = undefined;\n  playerTwo = undefined;\n  board = new _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n  playerOne = new _player_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldX + _tile_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].size * 1.5, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldY + _tile_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].size * 1.5);\n  playerTwo = new _ai_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mapWidth + _tile_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].size * 1.5, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mapHeight + _tile_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].size / 2);\n  playerOne.currentPlace.occupied = true;\n  playerTwo.currentPlace.occupied = true;\n  console.log(playerOne, playerTwo);\n  aiAnimate(playerOne, playerTwo, board);\n}\n\n// spawnBtnPlayer.addEventListener(\"click\", () => {\n\n//   // spawnBtnPlayer.style.display = \"none\"\n//   const game = new Game();\n//   game.start();\n\n// });\n\n// const board = new Board();\n// Board.map.forEach((ele) => console.log(ele));\n// // const player = new Player(375, 175)\n// console.log(Board.gameFieldX);\n// console.log(Board.gameFieldY);\n\n// var player;\n// var player2;\n\n// add event listener for the button click\n// spawnBtn.addEventListener(\"click\", () => {\n//   // create a new player and add it to the canvas\n//   player = new Player(Board.gameFieldX + Tile.size * 1.5,\n//     Board.gameFieldY + Tile.size * 1.5);\n//   player2 = new Playertwo(Board.mapWidth + (Tile.size * 1.5), Board.mapHeight + (Tile.size / 2));\n//   player.currentPlace.occupied = true;\n//   player2.currentPlace.occupied = true;\n//   spawnBtn.style.display = \"none\";\n\n//   localAnimate();\n// });\n\n// function tilePostion(row, col) {\n//   let x = Board.map[row][col].row\n//   let y = Board.map[row][col].col\n\n// // startX + tile.col * tile.size, startY + tile.row * tile.size;\n// }\n// const player = new Player(\n//   Board.gameFieldX + Tile.size * 1.5,\n//   Board.gameFieldY + Tile.size * 1.5\n// );\n// const player2 = new Playertwo(Board.mapWidth + (Tile.size * 1.5), Board.mapHeight + (Tile.size / 2));\n// const rambo = new AI(Board.playFieldWidth/2, Board.playFieldHeight/2)\n\n// rambo.currentPlace.occupied = true\n\n// function localAnimate() {\n//   window.requestAnimationFrame(localAnimate);\n//   c.clearRect(0, 0, Board.gameFieldX, Board.gameFieldY);\n//   board.draw();\n//   if (player && player2) {\n//     if (player.alive && !player2.victory) {\n//       player.draw();\n//     } else {\n//       c.font = \"200px Georgia\";\n//       c.fillStyle = \"Orange\";\n//       c.fillText(\"Blue Wins!\", canvas.width / 4, canvas.height / 2);\n//       spawnBtn.style.display = \"block\"; // show the spawn button\n//       return; // stop the animation\n//     }\n//     if (player2.alive && !player.victory) {\n//       player2.draw();\n//     } else {\n//       c.font = \"200px Georgia\";\n//       c.fillStyle = \"Orange\";\n//       c.fillText(\"Red Wins!\", canvas.width / 4, canvas.height / 2);\n//       spawnBtn.style.display = \"block\"; // show the spawn button\n//       return; // stop the animation\n//     }\n//   }\n// }\n\n// function animate() {\n//   window.requestAnimationFrame(animate);\n//   c.clearRect(0, 0, Board.gameFieldX, Board.gameFieldY);\n//   // c.fillRect(0,0,100,100)\n//   board.draw();\n//   // if (rambo) {\n//   //   if (rambo.alive && (!player2.victory || !player.victory)) {\n//   //     rambo.draw(); \n//   //   } else {\n//   //     c.font = \"200px Georgia\";\n//   //     c.fillStyle = \"Orange\";\n//   //     c.fillText(\"Players Win!\", canvas.width / 4, canvas.height / 2);\n//   //   }\n//   //   rambo.makeMove();\n//   //   rambo.makeMove();\n//   //   rambo.break();\n//   // }\n//   if (player.alive && !player2.victory) {\n//     player.draw();\n//   } else {\n//     // if (rambo.victory) {\n//     //   c.font = \"200px Georgia\";\n//     //   c.fillStyle = \"Orange\";\n//     //   c.fillText(\"Rambo Wins!\", canvas.width / 4, canvas.height / 2);\n//     // }\n//     c.font = \"200px Georgia\";\n//     c.fillStyle = \"Orange\";\n//     c.fillText(\"Blue Wins!\", canvas.width / 4, canvas.height / 2);\n//   }\n//   if (player2.alive && !player.victory) {\n//     player2.draw();\n//   } else {\n//     // if (rambo.victory) {\n//     //   c.font = \"200px Georgia\";\n//     //   c.fillStyle = \"Orange\";\n//     //   c.fillText(\"Rambo Wins!\", canvas.width / 4, canvas.height / 2);\n//     // }\n//     c.font = \"200px Georgia\";\n//     c.fillStyle = \"Orange\";\n//     c.fillText(\"Red Wins!\", canvas.width / 4, canvas.height / 2);\n//   }\n// }\n\n// player.currentTile();\n// player.getPlayerTile();\n// player2.getPlayerTile();\n// console.log(player.currentPlace)\n\nconsole.log(_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mapWidth, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mapHeight, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldEndX, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldEndY);\n\n// animate();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (spawnBtnPlayer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/play.js":
/*!*****************************!*\
  !*** ./src/scripts/play.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player.js */ \"./src/scripts/player.js\");\n/* harmony import */ var _playertwo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./playertwo.js */ \"./src/scripts/playertwo.js\");\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n/* harmony import */ var _ai_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ai.js */ \"./src/scripts/ai.js\");\n/* harmony import */ var _game_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./game.js */ \"./src/scripts/game.js\");\n\n\n\n\n\n\nconst canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\nclass Game {\n  constructor() {\n    this.board;\n    this.playerOne;\n    this.playerTwo;\n  }\n  start() {\n    console.log(this.board, this.playerOne, this.playerTwo);\n    // this.board.reset();\n    this.board = undefined;\n    this.playerOne = undefined;\n    this.playerTwo = undefined;\n    this.board = new _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    this.playerOne = new _player_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldX + _tile_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].size * 1.5, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldY + _tile_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].size * 1.5);\n    this.playerTwo = new _playertwo_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mapWidth + _tile_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].size * 1.5, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mapHeight + _tile_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].size / 2);\n    this.board.draw();\n    console.log(this.playerOne);\n    console.log(this.playerTwo);\n    console.log(this.board);\n    this.playerOne.currentPlace.occupied = true;\n    this.playerTwo.currentPlace.occupied = true;\n\n    // this.localAnimate(this.playerOne, this.playerTwo, this.board)\n    this.localAnimate(this.playerOne, this.playerTwo, this.board);\n    this.board.reset();\n  }\n  localAnimate(player1, player2, board) {\n    window.requestAnimationFrame(() => {\n      c.clearRect(0, 0, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldX, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldY);\n      board.draw();\n      if (player1 && player2) {\n        if (player1.alive && !player2.victory) {\n          player1.draw();\n        } else {\n          c.font = \"200px Georgia\";\n          c.fillStyle = \"Orange\";\n          c.fillText(\"Blue Wins!\", canvas.width / 4, canvas.height / 2);\n          _game_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].style.display = \"block\"; // show the spawn button\n          return; // stop the animation\n        }\n\n        if (player2.alive && !player1.victory) {\n          player2.draw();\n        } else {\n          c.font = \"200px Georgia\";\n          c.fillStyle = \"Orange\";\n          c.fillText(\"Red Wins!\", canvas.width / 4, canvas.height / 2);\n          _game_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].style.display = \"block\"; // show the spawn button\n          return; // stop the animation\n        }\n      }\n\n      this.localAnimate(player1, player2, board);\n    });\n  }\n\n  // localAnimate() {\n  //   window.requestAnimationFrame(() => {\n  //     c.clearRect(0, 0, Board.gameFieldX, Board.gameFieldY);\n  //     this.board.draw();\n  //     if (this.playerOne && this.playerTwo) {\n  //       if (this.playerOne.alive && !this.playerTwo.victory) {\n  //         this.playerOne.draw();\n  //       } else {\n  //         c.font = \"200px Georgia\";\n  //         c.fillStyle = \"Orange\";\n  //         c.fillText(\"Blue Wins!\", canvas.width / 4, canvas.height / 2);\n  //         // spawnBtnPlayer.style.display = \"block\"; // show the spawn button\n  //         return; // stop the animation\n  //       }\n  //       if (this.playerTwo.alive && !this.playerOne.victory) {\n  //         this.playerTwo.draw();\n  //       } else {\n  //         c.font = \"200px Georgia\";\n  //         c.fillStyle = \"Orange\";\n  //         c.fillText(\"Red Wins!\", canvas.width / 4, canvas.height / 2);\n  //         // spawnBtnPlayer.style.display = \"block\"; // show the spawn button\n  //         return; // stop the animation\n  //       }\n  //     }\n  //     this.localAnimate();\n  //   });\n  // }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Game);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/play.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n/* harmony import */ var _playertwo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./playertwo.js */ \"./src/scripts/playertwo.js\");\n\n\n\nconst canvas = document.getElementById('canvas');\nconst c = canvas.getContext('2d');\nclass Player {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.dx;\n    this.dy;\n    this.radius = 15;\n    this.row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    this.col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    this.currentPlace = this.getPlayerTile();\n    this.alive = true;\n    this.victory = false;\n    // this.row = this.currentTile[0]\n    // this.row = this.currentTile[1]\n\n    this.lastKey = '';\n    this.keys = {\n      w: {\n        pressed: false\n      },\n      a: {\n        pressed: false\n      },\n      s: {\n        pressed: false\n      },\n      d: {\n        pressed: false\n      }\n    };\n    window.addEventListener('keydown', _ref => {\n      let {\n        key\n      } = _ref;\n      // console.log(key)\n      // var nextTile = this.getAnyTileXY(this.x, this.y - 50);\n      var nowTile;\n      var nextTile;\n      switch (key) {\n        case 'w':\n          this.keys.w.pressed = true;\n          this.lastKey = 'w';\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x, this.y - 50);\n          // nextTile = this.getAnyTileXY(this.x, this.y - 50);\n          nowTile = this.getPlayerTile();\n          if (this.isTile(this.x, this.y - 50) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.y -= 50;\n            // console.log(nowTile)\n            // console.log(nextTile)\n          }\n\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case 'a':\n          this.keys.a.pressed = true;\n          this.lastKey = \"a\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x - 50, this.y);\n          if (this.isTile(this.x - 50, this.y) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.x -= 50;\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case 's':\n          this.keys.s.pressed = true;\n          this.lastKey = \"s\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x, this.y + 50);\n          if (this.isTile(this.x, this.y + 50) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.y += 50;\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case 'd':\n          this.keys.d.pressed = true;\n          this.lastKey = \"d\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x + 50, this.y);\n          if (this.isTile(this.x + 50, this.y) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.x += 50;\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case ' ':\n          switch (this.lastKey) {\n            case \"w\":\n              if (this.isTile(this.x, this.y - 50)) {\n                this.breakTile(this.x, this.y - 50);\n              }\n              break;\n            case \"a\":\n              if (this.isTile(this.x - 50, this.y)) {\n                this.breakTile(this.x - 50, this.y);\n              }\n              break;\n            case \"s\":\n              if (this.isTile(this.x, this.y + 50)) {\n                this.breakTile(this.x, this.y + 50);\n              }\n              break;\n            case \"d\":\n              if (this.isTile(this.x + 50, this.y)) {\n                this.breakTile(this.x + 50, this.y);\n              }\n              break;\n          }\n          break;\n      }\n      // console.log(keys.d.pressed)\n      // console.log(keys.s.pressed)\n    });\n  }\n\n  draw() {\n    c.beginPath();\n    c.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    c.fillStyle = 'red';\n    c.fill();\n    c.closePath();\n  }\n  currentTile() {\n    let row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    // console.log([row,col])\n    return [row, col];\n  }\n  getPlayerTile() {\n    let row = this.currentTile()[0];\n    let col = this.currentTile()[1];\n    // console.log([row, col])\n    // console.log(Board.map[row][col])\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTile(row, col) {\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTileXY(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n\n  // breakTiles\n\n  breakTile(x, y) {\n    let pos = this.xyConvert(x, y);\n    let row = pos[0];\n    let col = pos[1];\n    let tile = this.getAnyTile(row, col);\n    if (tile.health > 0) {\n      tile.health -= 1;\n      if (tile.health === 0) {\n        tile.visible = false;\n        if (tile.occupied) {\n          this.victory = true; // Checking if tile was occupied on last hit \n        }\n      }\n    }\n    // console.log(tile)\n  }\n\n  // Tile existence logic (use for boundary detection)\n\n  isTile(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    if (_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col] instanceof _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  xyConvert(x, y) {\n    let row = Math.floor((y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1);\n    return [row, col];\n  }\n\n  // Player dead logic\n\n  isDead() {\n    let tile = this.getPlayerTile();\n\n    // console.log(tile)\n    if (tile.health === 0) {\n      this.alive = false;\n    } else {\n      this.alive = true;\n    }\n  }\n  reset() {\n    this.x = undefined;\n    this.y = undefined;\n    this.dx = undefined;\n    this.dy = undefined;\n    this.radius = undefined;\n    this.row = undefined;\n    this.col = undefined;\n    this.currentPlace = undefined;\n    this.alive = undefined;\n    this.victory = undefined;\n    this.lastkey = undefined;\n    this.keys = undefined;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/scripts/playertwo.js":
/*!**********************************!*\
  !*** ./src/scripts/playertwo.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n\n\nconst canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\nclass Playertwo {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.dx;\n    this.dy;\n    this.radius = 15;\n    this.row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    this.col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    this.currentPlace = this.getPlayerTile();\n    this.alive = true;\n    this.victory = false;\n    // this.row = this.currentTile[0]\n    // this.row = this.currentTile[1]\n\n    this.lastKey = \"\";\n    this.keys = {\n      ArrowUp: {\n        pressed: false\n      },\n      ArrowLeft: {\n        pressed: false\n      },\n      ArrowDown: {\n        pressed: false\n      },\n      ArrowRight: {\n        pressed: false\n      }\n    };\n    window.addEventListener(\"keydown\", _ref => {\n      let {\n        key\n      } = _ref;\n      // console.log(key);\n      var nowTile;\n      var nextTile;\n      switch (key) {\n        case \"ArrowUp\":\n          this.keys.ArrowUp.pressed = true;\n          this.lastKey = \"ArrowUp\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x, this.y - 50);\n          if (this.isTile(this.x, this.y - 50) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.y -= 50;\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case \"ArrowLeft\":\n          this.keys.ArrowLeft.pressed = true;\n          this.lastKey = \"ArrowLeft\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x - 50, this.y);\n          if (this.isTile(this.x - 50, this.y) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.x -= 50;\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case \"ArrowDown\":\n          this.keys.ArrowDown.pressed = true;\n          this.lastKey = \"ArrowDown\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x, this.y + 50);\n          if (this.isTile(this.x, this.y + 50) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.y += 50;\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case \"ArrowRight\":\n          this.keys.ArrowRight.pressed = true;\n          this.lastKey = \"ArrowRight\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x + 50, this.y);\n          if (this.isTile(this.x + 50, this.y) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.x += 50;\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case \"Enter\":\n          switch (this.lastKey) {\n            case \"ArrowUp\":\n              if (this.isTile(this.x, this.y - 50)) {\n                this.breakTile(this.x, this.y - 50);\n              }\n              break;\n            case \"ArrowLeft\":\n              if (this.isTile(this.x - 50, this.y)) {\n                this.breakTile(this.x - 50, this.y);\n              }\n              break;\n            case \"ArrowDown\":\n              if (this.isTile(this.x, this.y + 50)) {\n                this.breakTile(this.x, this.y + 50);\n              }\n              break;\n            case \"ArrowRight\":\n              if (this.isTile(this.x + 50, this.y)) {\n                this.breakTile(this.x + 50, this.y);\n              }\n              break;\n          }\n          console.log(\"hello\");\n          break;\n      }\n      // console.log(keys.d.pressed)\n      // console.log(keys.s.pressed)\n    });\n  }\n\n  draw() {\n    c.beginPath();\n    c.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    c.fillStyle = \"blue\";\n    c.fill();\n    c.closePath();\n  }\n  currentTile() {\n    let row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    // console.log([row, col]);\n    return [row, col];\n  }\n  getPlayerTile() {\n    let row = this.currentTile()[0];\n    let col = this.currentTile()[1];\n    // console.log([row, col]);\n    // console.log(Board.map[row][col]);\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTile(row, col) {\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTileXY(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n\n  // breakTiles\n\n  breakTile(x, y) {\n    let pos = this.xyConvert(x, y);\n    let row = pos[0];\n    let col = pos[1];\n    let tile = this.getAnyTile(row, col);\n    if (tile.health > 0) {\n      tile.health -= 1;\n      if (tile.health === 0) {\n        tile.visible = false;\n        if (tile.occupied) {\n          this.victory = true;\n        }\n      }\n    }\n    // console.log(tile);\n  }\n\n  // Tile existence logic (use for boundary detection)\n\n  isTile(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    if (_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col] instanceof _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  xyConvert(x, y) {\n    let row = Math.floor((y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1);\n    return [row, col];\n  }\n\n  // Player dead logic\n\n  isDead() {\n    let tile = this.getPlayerTile();\n\n    // console.log(tile);\n    if (tile.health === 0) {\n      this.alive = false;\n    } else {\n      this.alive = true;\n    }\n  }\n  reset() {\n    this.x = undefined;\n    this.y = undefined;\n    this.dx = undefined;\n    this.dy = undefined;\n    this.radius = undefined;\n    this.row = undefined;\n    this.col = undefined;\n    this.currentPlace = undefined;\n    this.alive = undefined;\n    this.victory = undefined;\n    this.lastkey = undefined;\n    this.keys = undefined;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Playertwo);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/playertwo.js\n");

/***/ }),

/***/ "./src/scripts/tile.js":
/*!*****************************!*\
  !*** ./src/scripts/tile.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nclass Tile {\n  constructor(row, col) {\n    this.row = row;\n    this.col = col;\n    this.size = Tile.size;\n    this.health = 3;\n    this.visible = true;\n    this.occupied = false;\n  }\n}\n_defineProperty(Tile, \"size\", 50);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Tile);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy90aWxlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxJQUFJLENBQUM7RUFHVEMsV0FBV0EsQ0FBQ0MsR0FBRyxFQUFFQyxHQUFHLEVBQUU7SUFDcEIsSUFBSSxDQUFDRCxHQUFHLEdBQUdBLEdBQUc7SUFDZCxJQUFJLENBQUNDLEdBQUcsR0FBR0EsR0FBRztJQUNkLElBQUksQ0FBQ0MsSUFBSSxHQUFHSixJQUFJLENBQUNJLElBQUk7SUFDckIsSUFBSSxDQUFDQyxNQUFNLEdBQUcsQ0FBQztJQUNmLElBQUksQ0FBQ0MsT0FBTyxHQUFHLElBQUk7SUFDbkIsSUFBSSxDQUFDQyxRQUFRLEdBQUcsS0FBSztFQUN2QjtBQUNGO0FBQUNDLGVBQUEsQ0FYS1IsSUFBSSxVQUNNLEVBQUU7QUFZbEIsK0RBQWVBLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcGxlZWYvLi9zcmMvc2NyaXB0cy90aWxlLmpzPzBlYmQiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgVGlsZSB7XG4gIHN0YXRpYyBzaXplID0gNTA7XG5cbiAgY29uc3RydWN0b3Iocm93LCBjb2wpIHtcbiAgICB0aGlzLnJvdyA9IHJvdztcbiAgICB0aGlzLmNvbCA9IGNvbDtcbiAgICB0aGlzLnNpemUgPSBUaWxlLnNpemU7XG4gICAgdGhpcy5oZWFsdGggPSAzO1xuICAgIHRoaXMudmlzaWJsZSA9IHRydWU7XG4gICAgdGhpcy5vY2N1cGllZCA9IGZhbHNlO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRpbGU7Il0sIm5hbWVzIjpbIlRpbGUiLCJjb25zdHJ1Y3RvciIsInJvdyIsImNvbCIsInNpemUiLCJoZWFsdGgiLCJ2aXNpYmxlIiwib2NjdXBpZWQiLCJfZGVmaW5lUHJvcGVydHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/tile.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;