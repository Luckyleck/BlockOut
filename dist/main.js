/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _scripts_game_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/game.js */ \"./src/scripts/game.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3BsZWVmLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJvYXJkIGZyb20gXCIuL3NjcmlwdHMvYm9hcmQuanNcIlxyXG5pbXBvcnQgR2FtZSBmcm9tIFwiLi9zY3JpcHRzL2dhbWUuanNcIlxyXG4iXSwibmFtZXMiOlsiQm9hcmQiLCJHYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/ai.js":
/*!***************************!*\
  !*** ./src/scripts/ai.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n/* harmony import */ var _boundary_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boundary.js */ \"./src/scripts/boundary.js\");\n\n\n\nconst canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\nconst shovelRight = new Image();\nshovelRight.src = \"./images/shovels/Shovel_Yellow_Right.png\";\nconst shovelLeft = new Image();\nshovelLeft.src = \"./images/shovels/Shovel_Yellow_Left.png\";\nconst shovelDown = new Image();\nshovelDown.src = \"./images/shovels/Shovel_Yellow_Down.png\";\nclass AI {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.alive = true;\n    this.radius = 15;\n    this.row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    this.col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    this.victory = false;\n    this.currentPlace = this.getPlayerTile();\n    this.lastKey = \"\";\n    this.canMove = true;\n    this.canBreak = true;\n    this.breakCount = 0;\n    this.direction = \"left\";\n    this.image;\n  }\n  moveAndBreak() {\n    this.makeMove();\n    this.makeMove();\n    this.break();\n    this.makeMove();\n  }\n  makeMove() {\n    if (!this.canMove) return false;\n    const directions = [\"north\", \"south\", \"east\", \"west\"];\n    let direction = directions[Math.floor(Math.random() * directions.length)];\n    var nowTile;\n    var nextTile;\n    switch (direction) {\n      case \"north\":\n        // this.keys.ArrowUp.pressed = true;\n        this.lastKey = \"north\";\n        nowTile = this.getPlayerTile();\n        nextTile = this.getAnyTileXY(this.x, this.y - 50);\n        if (this.isTile(this.x, this.y - 50) && nextTile.occupied === false && nextTile.health > 0) {\n          nowTile.occupied = false;\n          nextTile.occupied = true;\n          this.y -= 50;\n          this.direction = \"up\";\n        }\n        if (this.alive && this.isDead()) {\n          this.alive = false;\n        }\n        break;\n      case \"west\":\n        // this.keys.ArrowLeft.pressed = true;\n        this.lastKey = \"west\";\n        nowTile = this.getPlayerTile();\n        nextTile = this.getAnyTileXY(this.x - 50, this.y);\n        if (this.isTile(this.x - 50, this.y) && nextTile.occupied === false && nextTile.health > 0) {\n          nowTile.occupied = false;\n          nextTile.occupied = true;\n          this.x -= 50;\n          this.direction = \"left\";\n        }\n        if (this.alive && this.isDead()) {\n          this.alive = false;\n        }\n        break;\n      case \"south\":\n        // this.keys.ArrowDown.pressed = true;\n        this.lastKey = \"south\";\n        nowTile = this.getPlayerTile();\n        nextTile = this.getAnyTileXY(this.x, this.y + 50);\n        if (this.isTile(this.x, this.y + 50) && nextTile.occupied === false && nextTile.health > 0) {\n          nowTile.occupied = false;\n          nextTile.occupied = true;\n          this.y += 50;\n          this.direction = \"down\";\n        }\n        if (this.alive && this.isDead()) {\n          this.alive = false;\n        }\n        break;\n      case \"east\":\n        // this.keys.ArrowRight.pressed = true;\n        this.lastKey = \"east\";\n        nowTile = this.getPlayerTile();\n        nextTile = this.getAnyTileXY(this.x + 50, this.y);\n        if (this.isTile(this.x + 50, this.y) && nextTile.occupied === false && nextTile.health > 0) {\n          nowTile.occupied = false;\n          nextTile.occupied = true;\n          this.x += 50;\n          this.direction = \"right\";\n        }\n        if (this.alive && this.isDead()) {\n          this.alive = false;\n        }\n        break;\n    }\n    // throttle\n    this.canMove = false;\n    setTimeout(() => this.canMove = true, 200);\n  }\n  break() {\n    if (!this.canBreak) return false;\n    switch (this.lastKey) {\n      case \"north\":\n        if (this.isTile(this.x, this.y - 50) && this.getAnyTileXY(this.x, this.y - 50).health > 0) {\n          this.breakTile(this.x, this.y - 50);\n        }\n        break;\n      case \"west\":\n        if (this.isTile(this.x - 50, this.y) && this.getAnyTileXY(this.x - 50, this.y).health > 0) {\n          this.breakTile(this.x - 50, this.y);\n        }\n        break;\n      case \"south\":\n        if (this.isTile(this.x, this.y + 50) && this.getAnyTileXY(this.x, this.y + 50).health > 0) {\n          this.breakTile(this.x, this.y + 50);\n        }\n        break;\n      case \"east\":\n        if (this.isTile(this.x + 50, this.y) && this.getAnyTileXY(this.x + 50, this.y).health > 0) {\n          this.breakTile(this.x + 50, this.y);\n        }\n        break;\n    }\n    this.canBreak = false;\n    setTimeout(() => this.canBreak = true, 200);\n  }\n  draw() {\n    this.pickImage();\n    c.drawImage(this.image, this.x - 10, this.y - 20, 40, 40);\n  }\n  currentTile() {\n    let row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    return [row, col];\n  }\n  getPlayerTile() {\n    let row = this.currentTile()[0];\n    let col = this.currentTile()[1];\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTile(row, col) {\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTileXY(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n\n  // breakTiles\n\n  breakTile(x, y) {\n    let pos = this.xyConvert(x, y);\n    let row = pos[0];\n    let col = pos[1];\n    let tile = this.getAnyTile(row, col);\n    if (tile.health > 0) {\n      tile.health -= 1;\n      if (tile.health === 0) {\n        tile.visible = false;\n        if (tile.occupied) {\n          this.victory = true;\n        }\n      }\n    }\n  }\n\n  // Tile existence logic (use for boundary detection)\n\n  isTile(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    if (_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col] instanceof _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  xyConvert(x, y) {\n    let row = Math.floor((y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1);\n    return [row, col];\n  }\n\n  // Player dead logic\n\n  isDead() {\n    let tile = this.getPlayerTile();\n\n    // console.log(tile);\n    if (tile.health === 0) {\n      this.alive = false;\n    } else {\n      this.alive = true;\n    }\n  }\n  reset() {\n    this.x = undefined;\n    this.y = undefined;\n    this.dx = undefined;\n    this.dy = undefined;\n    this.radius = undefined;\n    this.row = undefined;\n    this.col = undefined;\n    this.currentPlace = undefined;\n    this.alive = undefined;\n    this.victory = undefined;\n    this.lastkey = undefined;\n  }\n  pickImage() {\n    if (this.direction === \"right\") {\n      this.image = shovelRight;\n    } else if (this.direction === \"left\") {\n      this.image = shovelLeft;\n    } else if (this.direction === \"down\") {\n      this.image = shovelDown;\n    } else {\n      this.image = shovelLeft;\n    }\n  }\n  checkBoundary() {\n    const currentTile = this.getPlayerTile();\n    if (currentTile instanceof _boundary_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n      this.alive = false;\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (AI);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/ai.js\n");

/***/ }),

/***/ "./src/scripts/board.js":
/*!******************************!*\
  !*** ./src/scripts/board.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n/* harmony import */ var _boundary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./boundary.js */ \"./src/scripts/boundary.js\");\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./player.js */ \"./src/scripts/player.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n// import grass from './img/grass.png'\n\nconst canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\nconst grassFull = new Image();\ngrassFull.src = \"./images/tiles/grass.png\";\nconst stone = new Image();\nstone.src = \"./images/tiles/stone_pink.png\";\nconst dirtLight = new Image();\ndirtLight.src = \"./images/tiles/dirt_light.png\";\nconst dirtDark = new Image();\ndirtDark.src = \"./images/tiles/dirt_dark.png\";\n\n// c.fillRect(20, 20, 20, 20)\n\nclass Board {\n  // Map total Width and Height\n\n  // Map Start x and y\n  //300\n  //100\n\n  // Map End x and y\n\n  // Playfield Width and Height\n\n  // Playfield Start x and y\n  // 350;\n  // 150\n\n  constructor() {\n    // this.tiles = []\n    this.gameOver = false;\n    for (let i = 0; i < Board.map.length; i++) {\n      for (let j = 0; j < Board.map[i].length; j++) {\n        if (Board.map[i][j] === \" \") {\n          Board.map[i][j] = new _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](i,\n          // row\n          j // col\n          );\n        } else {\n          Board.map[i][j] = new _boundary_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](i,\n          // row\n          j // col\n          );\n        }\n      }\n    }\n  }\n\n  draw() {\n    const StartX = Board.gameFieldX;\n    const StartY = Board.gameFieldY;\n    Board.map.forEach(row => {\n      // console.log(row)\n      row.forEach(tile => {\n        // Col first, then row\n        if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && tile.health === 3) {\n          c.shadowBlur = 10;\n          c.shadowColor = \"black\";\n          c.drawImage(grassFull, StartX + tile.col * tile.size, StartY + tile.row * tile.size, tile.size, tile.size);\n        } else if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && tile.health === 2) {\n          c.shadowBlur = 10;\n          c.shadowColor = \"black\";\n          c.drawImage(dirtLight, StartX + tile.col * tile.size, StartY + tile.row * tile.size, tile.size, tile.size);\n        } else if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && tile.health === 1) {\n          c.shadowBlur = 10;\n          c.shadowColor = \"black\";\n          c.drawImage(dirtDark, StartX + tile.col * tile.size, StartY + tile.row * tile.size, tile.size, tile.size);\n        } else if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && tile.health === 0) {\n          c.globalAlpha = 0.0;\n          c.fillStyle = \"#ffebcd\"; // color of background\n          c.fillRect(StartX + tile.col * tile.size, StartY + tile.row * tile.size, tile.size, tile.size);\n          c.lineWidth = 2;\n          c.strokeStyle = \"black\";\n          c.strokeRect(StartX + tile.col * tile.size, StartY + tile.row * tile.size, tile.size, tile.size);\n          c.globalAlpha = 1;\n        } else if (tile instanceof _boundary_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n          c.drawImage(stone, StartX + tile.col * tile.size, StartY + tile.row * tile.size, tile.size, tile.size);\n        }\n      });\n    });\n\n    // Draw red dot at game field (x, y)\n    // c.fillStyle = \"red\";\n    // c.beginPath();\n    // c.arc(Board.gameFieldX, Board.gameFieldY, 5, 0, Math.PI * 2);\n    // c.fill();\n\n    // // Draw red dot at play field (x, y)\n    // const circleplayFieldStartX = Board.playFieldStartX;\n    // const circleplayFieldStartY = Board.playFieldStartY;\n    // c.fillStyle = \"blue\";\n    // c.beginPath();\n    // c.arc(circleplayFieldStartX, circleplayFieldStartY, 5, 0, Math.PI * 2);\n    // c.fill();\n  }\n\n  static shrinkPlayField() {\n    Board.shrinkCounter++;\n    if (Board.shrinkCounter >= 6) {\n      this.gameOver = true;\n      return;\n    }\n\n    // Remove top row\n    Board.map.shift();\n\n    // Remove bottom row\n    Board.map.pop();\n\n    // Remove leftmost column for each row\n    for (let row of Board.map) {\n      row.shift();\n    }\n\n    // Remove rightmost column for each row\n    for (let row of Board.map) {\n      row.pop();\n    }\n\n    // Replace the top row with new Boundary instances\n    for (let col = 0; col < Board.map[0].length; col++) {\n      Board.map[0][col] = new _boundary_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](0, col);\n    }\n\n    // Replace the bottom row with new Boundary instances\n    let lastRow = Board.map.length - 1;\n    for (let col = 0; col < Board.map[lastRow].length; col++) {\n      Board.map[lastRow][col] = new _boundary_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](lastRow, col);\n    }\n\n    // Replace the leftmost column with new Boundary instances\n    for (let row = 0; row < Board.map.length; row++) {\n      Board.map[row][0] = new _boundary_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](row, 0);\n    }\n\n    // Replace the rightmost column with new Boundary instances\n    let lastCol = Board.map[0].length - 1;\n    for (let row = 0; row < Board.map.length; row++) {\n      Board.map[row][lastCol] = new _boundary_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](row, lastCol);\n    }\n\n    // We must update the rows and cols of the Tile instances\n    for (let i = 0; i < Board.map.length; i++) {\n      for (let j = 0; j < Board.map[i].length; j++) {\n        const tile = Board.map[i][j];\n        if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n          tile.row = i;\n          tile.col = j;\n        }\n      }\n    }\n    Board.mapWidth = Board.map[0].length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size;\n    Board.mapHeight = Board.map.length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size;\n    Board.gameFieldX += 50;\n    Board.gameFieldY += 50;\n    Board.gameFieldEndX -= 50;\n    Board.gamefieldEndY -= 50;\n    Board.playFieldStartX += 50;\n    Board.playFieldStartY += 50;\n  }\n  static startTimer() {\n    if (!Board.intervalId) {\n      Board.intervalId = setInterval(() => {\n        Board.timer += 1;\n        if (Board.timer % 5 === 0) {\n          Board.shrinkPlayField();\n        }\n      }, 1000);\n    }\n  }\n  static stopTimer() {\n    if (Board.intervalId) {\n      clearInterval(Board.intervalId);\n      Board.intervalId = null;\n    }\n  }\n  reset() {\n    Board.mapn    Board.timer = 0;\n    Board.shrinkCounter = 0;\n    Board.canvasCenterX = canvas.width / 2;\n    Board.canvasCenterY = canvas.height / 2;\n\n    // Map total Width and Height\n    Board.mapWidth = Board.map[0].length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size;\n    Board.mapHeight = Board.map.length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size;\n\n    // Map Start x and y\n    Board.gameFieldX = Board.canvasCenterX / 2 / 2 + 60; //300\n    Board.gameFieldY = Board.canvasCenterY / 4; //100\n\n    // Map End x and y\n    Board.gameFieldEndX = Board.map[0].length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 3;\n    Board.gameFieldEndY = Board.map.length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2;\n\n    // Playfield Width and Height\n    Board.playFieldWidth = Board.mapWidth - _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2;\n    Board.playFieldHeight = Board.mapHeight - _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2;\n\n    // Playfield Start x and y\n    Board.playFieldStartX = Board.gameFieldX + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size; // 350;\n    Board.playFieldStartY = Board.gameFieldY + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size; // 150\n  }\n}\n_defineProperty(Board, \"mapn_defineProperty(Board, \"timer\", 0);\n_defineProperty(Board, \"intervalId\", null);\n_defineProperty(Board, \"shrinkCounter\", 0);\n_defineProperty(Board, \"canvasCenterX\", canvas.width / 2);\n_defineProperty(Board, \"canvasCenterY\", canvas.height / 2);\n_defineProperty(Board, \"mapWidth\", Board.map[0].length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size);\n_defineProperty(Board, \"mapHeight\", Board.map.length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size);\n_defineProperty(Board, \"gameFieldX\", Board.canvasCenterX / 2 / 2 + 60);\n_defineProperty(Board, \"gameFieldY\", Board.canvasCenterY / 4);\n_defineProperty(Board, \"gameFieldEndX\", Board.map[0].length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 3);\n_defineProperty(Board, \"gameFieldEndY\", Board.map.length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2);\n_defineProperty(Board, \"playFieldWidth\", Board.mapWidth - _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2);\n_defineProperty(Board, \"playFieldHeight\", Board.mapHeight - _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2);\n_defineProperty(Board, \"playFieldStartX\", Board.gameFieldX + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size);\n_defineProperty(Board, \"playFieldStartY\", Board.gameFieldY + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Board);\n\n// for (let i = 0; i < Board.map[0].length; i++) {\n//   const oldRow = Board.map[0][i].row;\n//   const oldCol = Board.map[0][i].col;\n//   Board.map[0][i] = new Boundary(oldRow + 1, oldCol);\n// }\n\n// Update map width and height\n// Board.mapWidth = Board.map[0].length * Tile.size;\n// Board.mapHeight = Board.map.length * Tile.size;\n\n// // Update game field end x and y\n// Board.gameFieldEndX = Board.mapWidth + (Tile.size * 3);\n// Board.gameFieldEndY = Board.mapHeight + (Tile.size * 2);\n\n// // Update playfield width and height\n// Board.playFieldWidth = Board.mapWidth - Tile.size * 2;\n// Board.playFieldHeight = Board.mapHeight - Tile.size * 2;\n\n// // Update playfield start x and y\n// Board.playFieldStartX = Board.gameFieldX + Tile.size;\n// Board.playFieldStartY = Board.gameFieldY + Tile.size;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFDaEYsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFDaEYsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFDaEYsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFDaEYsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFDaEYsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFDaEYsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFDaEYsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFDaEYsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFDaEYsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFDaEYsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENB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QUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFDaEYsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFDaEYsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFDaEYsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFDaEYsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFDaEYsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxH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QUFHckI7QUFDSTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcGxlZWYvLi9zcmMvc2NyaXB0cy9ib2FyZC5qcz9iY2IwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUaWxlIGZyb20gJy4vdGlsZS5qcydcbmltcG9ydCBCb3VuZGFyeSBmcm9tICcuL2JvdW5kYXJ5LmpzJ1xuaW1wb3J0IFBsYXllciBmcm9tICcuL3BsYXllci5qcydcbi8vIGltcG9ydCBncmFzcyBmcm9tICcuL2ltZy9ncmFzcy5wbmcnXG5cbmNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpO1xuY29uc3QgYyA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIilcblxuY29uc3QgZ3Jhc3NGdWxsID0gbmV3IEltYWdlKCk7XG5ncmFzc0Z1bGwuc3JjID0gXCIuL2ltYWdlcy90aWxlcy9ncmFzcy5wbmdcIjtcblxuY29uc3Qgc3RvbmUgPSBuZXcgSW1hZ2UoKTtcbnN0b25lLnNyYyA9IFwiLi9pbWFnZXMvdGlsZXMvc3RvbmVfcGluay5wbmdcIlxuXG5jb25zdCBkaXJ0TGlnaHQgPSBuZXcgSW1hZ2UoKTtcbmRpcnRMaWdodC5zcmMgPSBcIi4vaW1hZ2VzL3RpbGVzL2RpcnRfbGlnaHQucG5nXCJcblxuY29uc3QgZGlydERhcmsgPSBuZXcgSW1hZ2UoKTtcbmRpcnREYXJrLnNyYyA9IFwiLi9pbWFnZXMvdGlsZXMvZGlydF9kYXJrLnBuZ1wiO1xuXG4vLyBjLmZpbGxSZWN0KDIwLCAyMCwgMjAsIDIwKVxuXG5jbGFzcyBCb2FyZCB7XG5cblxuICBzdGF0aWMgbWFwID0gW1xuICAgIFtcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIl0sXG4gICAgW1wiLVwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiLVwiXSxcbiAgICBbXCItXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCItXCJdLFxuICAgIFtcIi1cIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIi1cIl0sXG4gICAgW1wiLVwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiLVwiXSxcbiAgICBbXCItXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCItXCJdLFxuICAgIFtcIi1cIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIi1cIl0sXG4gICAgW1wiLVwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiLVwiXSxcbiAgICBbXCItXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCItXCJdLFxuICAgIFtcIi1cIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIi1cIl0sXG4gICAgW1wiLVwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiLVwiXSxcbiAgICBbXCItXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCItXCJdLFxuICAgIFtcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIl1cbiAgXVxuXG4gIHN0YXRpYyB0aW1lciA9IDA7XG4gIHN0YXRpYyBpbnRlcnZhbElkID0gbnVsbDtcbiAgc3RhdGljIHNocmlua0NvdW50ZXIgPSAwO1xuXG4gIHN0YXRpYyBjYW52YXNDZW50ZXJYID0gY2FudmFzLndpZHRoIC8gMlxuICBzdGF0aWMgY2FudmFzQ2VudGVyWSA9IGNhbnZhcy5oZWlnaHQgLyAyXG5cbiAgLy8gTWFwIHRvdGFsIFdpZHRoIGFuZCBIZWlnaHRcbiAgc3RhdGljIG1hcFdpZHRoID0gQm9hcmQubWFwWzBdLmxlbmd0aCAqIFRpbGUuc2l6ZTtcbiAgc3RhdGljIG1hcEhlaWdodCA9IEJvYXJkLm1hcC5sZW5ndGggKiBUaWxlLnNpemU7XG5cbiAgLy8gTWFwIFN0YXJ0IHggYW5kIHlcbiAgc3RhdGljIGdhbWVGaWVsZFggPSBCb2FyZC5jYW52YXNDZW50ZXJYIC8gMiAvIDIgKyA2MDsgLy8zMDBcbiAgc3RhdGljIGdhbWVGaWVsZFkgPSBCb2FyZC5jYW52YXNDZW50ZXJZIC8gNDsgLy8xMDBcblxuICAvLyBNYXAgRW5kIHggYW5kIHlcbiAgc3RhdGljIGdhbWVGaWVsZEVuZFggPSAoQm9hcmQubWFwWzBdLmxlbmd0aCAqIFRpbGUuc2l6ZSkgKyAoVGlsZS5zaXplICogMylcbiAgc3RhdGljIGdhbWVGaWVsZEVuZFkgPSAoQm9hcmQubWFwLmxlbmd0aCAqIFRpbGUuc2l6ZSkgKyAoVGlsZS5zaXplICogMilcblxuICAvLyBQbGF5ZmllbGQgV2lkdGggYW5kIEhlaWdodFxuICBzdGF0aWMgcGxheUZpZWxkV2lkdGggPSBCb2FyZC5tYXBXaWR0aCAtIFRpbGUuc2l6ZSAqIDI7XG4gIHN0YXRpYyBwbGF5RmllbGRIZWlnaHQgPSBCb2FyZC5tYXBIZWlnaHQgLSBUaWxlLnNpemUgKiAyO1xuXG4gIC8vIFBsYXlmaWVsZCBTdGFydCB4IGFuZCB5XG4gIHN0YXRpYyBwbGF5RmllbGRTdGFydFggPSBCb2FyZC5nYW1lRmllbGRYICsgVGlsZS5zaXplOyAvLyAzNTA7XG4gIHN0YXRpYyBwbGF5RmllbGRTdGFydFkgPSBCb2FyZC5nYW1lRmllbGRZICsgVGlsZS5zaXplOyAvLyAxNTBcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICAvLyB0aGlzLnRpbGVzID0gW11cbiAgICB0aGlzLmdhbWVPdmVyID0gZmFsc2U7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBCb2FyZC5tYXAubGVuZ3RoOyBpKyspIHtcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgQm9hcmQubWFwW2ldLmxlbmd0aDsgaisrKSB7XG4gICAgICAgIGlmIChCb2FyZC5tYXBbaV1bal0gPT09IFwiIFwiKSB7XG4gICAgICAgICAgQm9hcmQubWFwW2ldW2pdID0gbmV3IFRpbGUoXG4gICAgICAgICAgICBpLCAvLyByb3dcbiAgICAgICAgICAgIGogLy8gY29sXG4gICAgICAgICAgKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBCb2FyZC5tYXBbaV1bal0gPSBuZXcgQm91bmRhcnkoXG4gICAgICAgICAgICBpLCAvLyByb3dcbiAgICAgICAgICAgIGogLy8gY29sXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGRyYXcoKSB7XG4gICAgY29uc3QgU3RhcnRYID0gQm9hcmQuZ2FtZUZpZWxkWDtcbiAgICBjb25zdCBTdGFydFkgPSBCb2FyZC5nYW1lRmllbGRZO1xuXG4gICAgQm9hcmQubWFwLmZvckVhY2goKHJvdykgPT4ge1xuICAgICAgLy8gY29uc29sZS5sb2cocm93KVxuICAgICAgcm93LmZvckVhY2goKHRpbGUpID0+IHtcblxuICAgICAgICAvLyBDb2wgZmlyc3QsIHRoZW4gcm93XG4gICAgICAgIGlmICh0aWxlIGluc3RhbmNlb2YgVGlsZSAmJiB0aWxlLmhlYWx0aCA9PT0gMykge1xuICAgICAgICAgIGMuc2hhZG93Qmx1ciA9IDEwO1xuICAgICAgICAgIGMuc2hhZG93Q29sb3IgPSBcImJsYWNrXCI7XG4gICAgICAgICAgYy5kcmF3SW1hZ2UoZ3Jhc3NGdWxsLCBTdGFydFggKyAodGlsZS5jb2wgKiB0aWxlLnNpemUpLCBTdGFydFkgKyAodGlsZS5yb3cgKiB0aWxlLnNpemUpLCB0aWxlLnNpemUsIHRpbGUuc2l6ZSlcbiAgICAgICAgfSBlbHNlIGlmICh0aWxlIGluc3RhbmNlb2YgVGlsZSAmJiB0aWxlLmhlYWx0aCA9PT0gMikge1xuICAgICAgICAgIGMuc2hhZG93Qmx1ciA9IDEwO1xuICAgICAgICAgIGMuc2hhZG93Q29sb3IgPSBcImJsYWNrXCI7XG4gICAgICAgICAgYy5kcmF3SW1hZ2UoZGlydExpZ2h0LCBTdGFydFggKyAodGlsZS5jb2wgKiB0aWxlLnNpemUpLCBTdGFydFkgKyAodGlsZS5yb3cgKiB0aWxlLnNpemUpLCB0aWxlLnNpemUsIHRpbGUuc2l6ZSlcbiAgICAgICAgfSBlbHNlIGlmICh0aWxlIGluc3RhbmNlb2YgVGlsZSAmJiB0aWxlLmhlYWx0aCA9PT0gMSkge1xuICAgICAgICAgIGMuc2hhZG93Qmx1ciA9IDEwO1xuICAgICAgICAgIGMuc2hhZG93Q29sb3IgPSBcImJsYWNrXCI7XG4gICAgICAgICAgYy5kcmF3SW1hZ2UoZGlydERhcmssIFN0YXJ0WCArICh0aWxlLmNvbCAqIHRpbGUuc2l6ZSksIFN0YXJ0WSArICh0aWxlLnJvdyAqIHRpbGUuc2l6ZSksIHRpbGUuc2l6ZSwgdGlsZS5zaXplKVxuICAgICAgICB9IGVsc2UgaWYgKHRpbGUgaW5zdGFuY2VvZiBUaWxlICYmIHRpbGUuaGVhbHRoID09PSAwKSB7XG4gICAgICAgICAgYy5nbG9iYWxBbHBoYSA9IDAuMDtcbiAgICAgICAgICBjLmZpbGxTdHlsZSA9IFwiI2ZmZWJjZFwiOyAvLyBjb2xvciBvZiBiYWNrZ3JvdW5kXG4gICAgICAgICAgYy5maWxsUmVjdChTdGFydFggKyAodGlsZS5jb2wgKiB0aWxlLnNpemUpLCBTdGFydFkgKyAodGlsZS5yb3cgKiB0aWxlLnNpemUpLCB0aWxlLnNpemUsIHRpbGUuc2l6ZSk7XG4gICAgICAgICAgYy5saW5lV2lkdGggPSAyO1xuICAgICAgICAgIGMuc3Ryb2tlU3R5bGUgPSBcImJsYWNrXCI7XG4gICAgICAgICAgYy5zdHJva2VSZWN0KFN0YXJ0WCArICh0aWxlLmNvbCAqIHRpbGUuc2l6ZSksIFN0YXJ0WSArICh0aWxlLnJvdyAqIHRpbGUuc2l6ZSksIHRpbGUuc2l6ZSwgdGlsZS5zaXplKTtcbiAgICAgICAgICBjLmdsb2JhbEFscGhhID0gMTtcbiAgICAgICAgfSBlbHNlIGlmICh0aWxlIGluc3RhbmNlb2YgQm91bmRhcnkpIHtcbiAgICAgICAgICBjLmRyYXdJbWFnZShzdG9uZSwgU3RhcnRYICsgKHRpbGUuY29sICogdGlsZS5zaXplKSwgU3RhcnRZICsgKHRpbGUucm93ICogdGlsZS5zaXplKSwgdGlsZS5zaXplLCB0aWxlLnNpemUpXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuXG5cblxuICAgIC8vIERyYXcgcmVkIGRvdCBhdCBnYW1lIGZpZWxkICh4LCB5KVxuICAgIC8vIGMuZmlsbFN0eWxlID0gXCJyZWRcIjtcbiAgICAvLyBjLmJlZ2luUGF0aCgpO1xuICAgIC8vIGMuYXJjKEJvYXJkLmdhbWVGaWVsZFgsIEJvYXJkLmdhbWVGaWVsZFksIDUsIDAsIE1hdGguUEkgKiAyKTtcbiAgICAvLyBjLmZpbGwoKTtcblxuICAgIC8vIC8vIERyYXcgcmVkIGRvdCBhdCBwbGF5IGZpZWxkICh4LCB5KVxuICAgIC8vIGNvbnN0IGNpcmNsZXBsYXlGaWVsZFN0YXJ0WCA9IEJvYXJkLnBsYXlGaWVsZFN0YXJ0WDtcbiAgICAvLyBjb25zdCBjaXJjbGVwbGF5RmllbGRTdGFydFkgPSBCb2FyZC5wbGF5RmllbGRTdGFydFk7XG4gICAgLy8gYy5maWxsU3R5bGUgPSBcImJsdWVcIjtcbiAgICAvLyBjLmJlZ2luUGF0aCgpO1xuICAgIC8vIGMuYXJjKGNpcmNsZXBsYXlGaWVsZFN0YXJ0WCwgY2lyY2xlcGxheUZpZWxkU3RhcnRZLCA1LCAwLCBNYXRoLlBJICogMik7XG4gICAgLy8gYy5maWxsKCk7XG4gIH1cblxuICBzdGF0aWMgc2hyaW5rUGxheUZpZWxkKCkge1xuXG4gICAgQm9hcmQuc2hyaW5rQ291bnRlcisrO1xuXG4gICAgaWYgKEJvYXJkLnNocmlua0NvdW50ZXIgPj0gNikge1xuICAgICAgdGhpcy5nYW1lT3ZlciA9IHRydWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gUmVtb3ZlIHRvcCByb3dcbiAgICBCb2FyZC5tYXAuc2hpZnQoKTtcblxuICAgIC8vIFJlbW92ZSBib3R0b20gcm93XG4gICAgQm9hcmQubWFwLnBvcCgpO1xuXG4gICAgLy8gUmVtb3ZlIGxlZnRtb3N0IGNvbHVtbiBmb3IgZWFjaCByb3dcbiAgICBmb3IgKGxldCByb3cgb2YgQm9hcmQubWFwKSB7XG4gICAgICByb3cuc2hpZnQoKTtcbiAgICB9XG5cbiAgICAvLyBSZW1vdmUgcmlnaHRtb3N0IGNvbHVtbiBmb3IgZWFjaCByb3dcbiAgICBmb3IgKGxldCByb3cgb2YgQm9hcmQubWFwKSB7XG4gICAgICByb3cucG9wKCk7XG4gICAgfVxuXG4gICAgLy8gUmVwbGFjZSB0aGUgdG9wIHJvdyB3aXRoIG5ldyBCb3VuZGFyeSBpbnN0YW5jZXNcbiAgICBmb3IgKGxldCBjb2wgPSAwOyBjb2wgPCBCb2FyZC5tYXBbMF0ubGVuZ3RoOyBjb2wrKykge1xuICAgICAgQm9hcmQubWFwWzBdW2NvbF0gPSBuZXcgQm91bmRhcnkoMCwgY29sKTtcbiAgICB9XG5cbiAgICAvLyBSZXBsYWNlIHRoZSBib3R0b20gcm93IHdpdGggbmV3IEJvdW5kYXJ5IGluc3RhbmNlc1xuICAgIGxldCBsYXN0Um93ID0gQm9hcmQubWFwLmxlbmd0aCAtIDE7XG4gICAgZm9yIChsZXQgY29sID0gMDsgY29sIDwgQm9hcmQubWFwW2xhc3RSb3ddLmxlbmd0aDsgY29sKyspIHtcbiAgICAgIEJvYXJkLm1hcFtsYXN0Um93XVtjb2xdID0gbmV3IEJvdW5kYXJ5KGxhc3RSb3csIGNvbCk7XG4gICAgfVxuXG4gICAgLy8gUmVwbGFjZSB0aGUgbGVmdG1vc3QgY29sdW1uIHdpdGggbmV3IEJvdW5kYXJ5IGluc3RhbmNlc1xuICAgIGZvciAobGV0IHJvdyA9IDA7IHJvdyA8IEJvYXJkLm1hcC5sZW5ndGg7IHJvdysrKSB7XG4gICAgICBCb2FyZC5tYXBbcm93XVswXSA9IG5ldyBCb3VuZGFyeShyb3csIDApO1xuICAgIH1cblxuICAgIC8vIFJlcGxhY2UgdGhlIHJpZ2h0bW9zdCBjb2x1bW4gd2l0aCBuZXcgQm91bmRhcnkgaW5zdGFuY2VzXG4gICAgbGV0IGxhc3RDb2wgPSBCb2FyZC5tYXBbMF0ubGVuZ3RoIC0gMTtcbiAgICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCBCb2FyZC5tYXAubGVuZ3RoOyByb3crKykge1xuICAgICAgQm9hcmQubWFwW3Jvd11bbGFzdENvbF0gPSBuZXcgQm91bmRhcnkocm93LCBsYXN0Q29sKTtcbiAgICB9XG5cbiAgICAvLyBXZSBtdXN0IHVwZGF0ZSB0aGUgcm93cyBhbmQgY29scyBvZiB0aGUgVGlsZSBpbnN0YW5jZXNcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IEJvYXJkLm1hcC5sZW5ndGg7IGkrKykge1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBCb2FyZC5tYXBbaV0ubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgY29uc3QgdGlsZSA9IEJvYXJkLm1hcFtpXVtqXTtcbiAgICAgICAgaWYgKHRpbGUgaW5zdGFuY2VvZiBUaWxlKSB7XG4gICAgICAgICAgdGlsZS5yb3cgPSBpO1xuICAgICAgICAgIHRpbGUuY29sID0gajtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIEJvYXJkLm1hcFdpZHRoID0gQm9hcmQubWFwWzBdLmxlbmd0aCAqIFRpbGUuc2l6ZTtcbiAgICBCb2FyZC5tYXBIZWlnaHQgPSBCb2FyZC5tYXAubGVuZ3RoICogVGlsZS5zaXplO1xuXG4gICAgQm9hcmQuZ2FtZUZpZWxkWCArPSA1MDtcbiAgICBCb2FyZC5nYW1lRmllbGRZICs9IDUwO1xuXG4gICAgQm9hcmQuZ2FtZUZpZWxkRW5kWCAtPSA1MDtcbiAgICBCb2FyZC5nYW1lZmllbGRFbmRZIC09IDUwO1xuXG4gICAgQm9hcmQucGxheUZpZWxkU3RhcnRYICs9IDUwO1xuICAgIEJvYXJkLnBsYXlGaWVsZFN0YXJ0WSArPSA1MDtcblxuICB9XG5cbiAgc3RhdGljIHN0YXJ0VGltZXIoKSB7XG4gICAgaWYgKCFCb2FyZC5pbnRlcnZhbElkKSB7XG4gICAgICBCb2FyZC5pbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICBCb2FyZC50aW1lciArPSAxO1xuICAgICAgICBpZiAoQm9hcmQudGltZXIgJSA1ID09PSAwKSB7XG4gICAgICAgICAgQm9hcmQuc2hyaW5rUGxheUZpZWxkKCk7XG4gICAgICAgIH1cbiAgICAgIH0sIDEwMDApO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBzdG9wVGltZXIoKSB7XG4gICAgaWYgKEJvYXJkLmludGVydmFsSWQpIHtcbiAgICAgIGNsZWFySW50ZXJ2YWwoQm9hcmQuaW50ZXJ2YWxJZCk7XG4gICAgICBCb2FyZC5pbnRlcnZhbElkID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICByZXNldCgpIHtcbiAgICBCb2FyZC5tYXAgPSBbXG4gICAgICBbXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCJdLFxuICAgICAgW1wiLVwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiLVwiXSxcbiAgICAgIFtcIi1cIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIi1cIl0sXG4gICAgICBbXCItXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCItXCJdLFxuICAgICAgW1wiLVwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiLVwiXSxcbiAgICAgIFtcIi1cIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIi1cIl0sXG4gICAgICBbXCItXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCItXCJdLFxuICAgICAgW1wiLVwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiLVwiXSxcbiAgICAgIFtcIi1cIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIi1cIl0sXG4gICAgICBbXCItXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCItXCJdLFxuICAgICAgW1wiLVwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiLVwiXSxcbiAgICAgIFtcIi1cIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIiBcIiwgXCIgXCIsIFwiIFwiLCBcIi1cIl0sXG4gICAgICBbXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCIsIFwiLVwiLCBcIi1cIiwgXCItXCJdXG4gICAgXVxuXG4gICAgQm9hcmQudGltZXIgPSAwO1xuICAgIEJvYXJkLnNocmlua0NvdW50ZXIgPSAwO1xuXG4gICAgQm9hcmQuY2FudmFzQ2VudGVyWCA9IGNhbnZhcy53aWR0aCAvIDJcbiAgICBCb2FyZC5jYW52YXNDZW50ZXJZID0gY2FudmFzLmhlaWdodCAvIDJcblxuICAgIC8vIE1hcCB0b3RhbCBXaWR0aCBhbmQgSGVpZ2h0XG4gICAgQm9hcmQubWFwV2lkdGggPSBCb2FyZC5tYXBbMF0ubGVuZ3RoICogVGlsZS5zaXplO1xuICAgIEJvYXJkLm1hcEhlaWdodCA9IEJvYXJkLm1hcC5sZW5ndGggKiBUaWxlLnNpemU7XG5cbiAgICAvLyBNYXAgU3RhcnQgeCBhbmQgeVxuICAgIEJvYXJkLmdhbWVGaWVsZFggPSBCb2FyZC5jYW52YXNDZW50ZXJYIC8gMiAvIDIgKyA2MDsgLy8zMDBcbiAgICBCb2FyZC5nYW1lRmllbGRZID0gQm9hcmQuY2FudmFzQ2VudGVyWSAvIDQ7IC8vMTAwXG5cbiAgICAvLyBNYXAgRW5kIHggYW5kIHlcbiAgICBCb2FyZC5nYW1lRmllbGRFbmRYID0gKEJvYXJkLm1hcFswXS5sZW5ndGggKiBUaWxlLnNpemUpICsgKFRpbGUuc2l6ZSAqIDMpXG4gICAgQm9hcmQuZ2FtZUZpZWxkRW5kWSA9IChCb2FyZC5tYXAubGVuZ3RoICogVGlsZS5zaXplKSArIChUaWxlLnNpemUgKiAyKVxuXG4gICAgLy8gUGxheWZpZWxkIFdpZHRoIGFuZCBIZWlnaHRcbiAgICBCb2FyZC5wbGF5RmllbGRXaWR0aCA9IEJvYXJkLm1hcFdpZHRoIC0gVGlsZS5zaXplICogMjtcbiAgICBCb2FyZC5wbGF5RmllbGRIZWlnaHQgPSBCb2FyZC5tYXBIZWlnaHQgLSBUaWxlLnNpemUgKiAyO1xuXG4gICAgLy8gUGxheWZpZWxkIFN0YXJ0IHggYW5kIHlcbiAgICBCb2FyZC5wbGF5RmllbGRTdGFydFggPSBCb2FyZC5nYW1lRmllbGRYICsgVGlsZS5zaXplOyAvLyAzNTA7XG4gICAgQm9hcmQucGxheUZpZWxkU3RhcnRZID0gQm9hcmQuZ2FtZUZpZWxkWSArIFRpbGUuc2l6ZTsgLy8gMTUwXG5cblxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEJvYXJkO1xuXG5cbi8vIGZvciAobGV0IGkgPSAwOyBpIDwgQm9hcmQubWFwWzBdLmxlbmd0aDsgaSsrKSB7XG4gICAgLy8gICBjb25zdCBvbGRSb3cgPSBCb2FyZC5tYXBbMF1baV0ucm93O1xuICAgIC8vICAgY29uc3Qgb2xkQ29sID0gQm9hcmQubWFwWzBdW2ldLmNvbDtcbiAgICAvLyAgIEJvYXJkLm1hcFswXVtpXSA9IG5ldyBCb3VuZGFyeShvbGRSb3cgKyAxLCBvbGRDb2wpO1xuICAgIC8vIH1cblxuICAgIC8vIFVwZGF0ZSBtYXAgd2lkdGggYW5kIGhlaWdodFxuICAgIC8vIEJvYXJkLm1hcFdpZHRoID0gQm9hcmQubWFwWzBdLmxlbmd0aCAqIFRpbGUuc2l6ZTtcbiAgICAvLyBCb2FyZC5tYXBIZWlnaHQgPSBCb2FyZC5tYXAubGVuZ3RoICogVGlsZS5zaXplO1xuXG4gICAgLy8gLy8gVXBkYXRlIGdhbWUgZmllbGQgZW5kIHggYW5kIHlcbiAgICAvLyBCb2FyZC5nYW1lRmllbGRFbmRYID0gQm9hcmQubWFwV2lkdGggKyAoVGlsZS5zaXplICogMyk7XG4gICAgLy8gQm9hcmQuZ2FtZUZpZWxkRW5kWSA9IEJvYXJkLm1hcEhlaWdodCArIChUaWxlLnNpemUgKiAyKTtcblxuICAgIC8vIC8vIFVwZGF0ZSBwbGF5ZmllbGQgd2lkdGggYW5kIGhlaWdodFxuICAgIC8vIEJvYXJkLnBsYXlGaWVsZFdpZHRoID0gQm9hcmQubWFwV2lkdGggLSBUaWxlLnNpemUgKiAyO1xuICAgIC8vIEJvYXJkLnBsYXlGaWVsZEhlaWdodCA9IEJvYXJkLm1hcEhlaWdodCAtIFRpbGUuc2l6ZSAqIDI7XG5cbiAgICAvLyAvLyBVcGRhdGUgcGxheWZpZWxkIHN0YXJ0IHggYW5kIHlcbiAgICAvLyBCb2FyZC5wbGF5RmllbGRTdGFydFggPSBCb2FyZC5nYW1lRmllbGRYICsgVGlsZS5zaXplO1xuICAgIC8vIEJvYXJkLnBsYXlGaWVsZFN0YXJ0WSA9IEJvYXJkLmdhbWVGaWVsZFkgKyBUaWxlLnNpemU7XG5cblxuIl0sIm5hbWVzIjpbIlRpbGUiLCJCb3VuZGFyeSIsIlBsYXllciIsImNhbnZhcyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJjIiwiZ2V0Q29udGV4dCIsImdyYXNzRnVsbCIsIkltYWdlIiwic3JjIiwic3RvbmUiLCJkaXJ0TGlnaHQiLCJkaXJ0RGFyayIsIkJvYXJkIiwiY29uc3RydWN0b3IiLCJnYW1lT3ZlciIsImkiLCJtYXAiLCJsZW5ndGgiLCJqIiwiZHJhdyIsIlN0YXJ0WCIsImdhbWVGaWVsZFgiLCJTdGFydFkiLCJnYW1lRmllbGRZIiwiZm9yRWFjaCIsInJvdyIsInRpbGUiLCJoZWFsdGgiLCJzaGFkb3dCbHVyIiwic2hhZG93Q29sb3IiLCJkcmF3SW1hZ2UiLCJjb2wiLCJzaXplIiwiZ2xvYmFsQWxwaGEiLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsImxpbmVXaWR0aCIsInN0cm9rZVN0eWxlIiwic3Ryb2tlUmVjdCIsInNocmlua1BsYXlGaWVsZCIsInNocmlua0NvdW50ZXIiLCJzaGlmdCIsInBvcCIsImxhc3RSb3ciLCJsYXN0Q29sIiwibWFwV2lkdGgiLCJtYXBIZWlnaHQiLCJnYW1lRmllbGRFbmRYIiwiZ2FtZWZpZWxkRW5kWSIsInBsYXlGaWVsZFN0YXJ0WCIsInBsYXlGaWVsZFN0YXJ0WSIsInN0YXJ0VGltZXIiLCJpbnRlcnZhbElkIiwic2V0SW50ZXJ2YWwiLCJ0aW1lciIsInN0b3BUaW1lciIsImNsZWFySW50ZXJ2YWwiLCJyZXNldCIsImNhbnZhc0NlbnRlclgiLCJ3aWR0aCIsImNhbnZhc0NlbnRlclkiLCJoZWlnaHQiLCJnYW1lRmllbGRFbmRZIiwicGxheUZpZWxkV2lkdGgiLCJwbGF5RmllbGRIZWlnaHQiLCJfZGVmaW5lUHJvcGVydHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/board.js\n");

/***/ }),

/***/ "./src/scripts/boundary.js":
/*!*********************************!*\
  !*** ./src/scripts/boundary.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nclass Boundary {\n  constructor(row, col) {\n    this.row = row;\n    this.col = col;\n    this.size = Boundary.size;\n    this.occupied = false;\n  }\n}\n_defineProperty(Boundary, \"size\", 50);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Boundary);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9ib3VuZGFyeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsUUFBUSxDQUFDO0VBR1hDLFdBQVdBLENBQUNDLEdBQUcsRUFBQ0MsR0FBRyxFQUFFO0lBQ2pCLElBQUksQ0FBQ0QsR0FBRyxHQUFHQSxHQUFHO0lBQ2QsSUFBSSxDQUFDQyxHQUFHLEdBQUdBLEdBQUc7SUFDZCxJQUFJLENBQUNDLElBQUksR0FBR0osUUFBUSxDQUFDSSxJQUFJO0lBQ3pCLElBQUksQ0FBQ0MsUUFBUSxHQUFHLEtBQUs7RUFDekI7QUFDSjtBQUFDQyxlQUFBLENBVEtOLFFBQVEsVUFDSSxFQUFFO0FBVXBCLCtEQUFlQSxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3BsZWVmLy4vc3JjL3NjcmlwdHMvYm91bmRhcnkuanM/MWYwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBCb3VuZGFyeSB7XG4gICAgc3RhdGljIHNpemUgPSA1MDtcblxuICAgIGNvbnN0cnVjdG9yKHJvdyxjb2wpIHtcbiAgICAgICAgdGhpcy5yb3cgPSByb3c7IFxuICAgICAgICB0aGlzLmNvbCA9IGNvbFxuICAgICAgICB0aGlzLnNpemUgPSBCb3VuZGFyeS5zaXplO1xuICAgICAgICB0aGlzLm9jY3VwaWVkID0gZmFsc2U7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBCb3VuZGFyeSJdLCJuYW1lcyI6WyJCb3VuZGFyeSIsImNvbnN0cnVjdG9yIiwicm93IiwiY29sIiwic2l6ZSIsIm9jY3VwaWVkIiwiX2RlZmluZVByb3BlcnR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/boundary.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player.js */ \"./src/scripts/player.js\");\n/* harmony import */ var _playertwo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./playertwo.js */ \"./src/scripts/playertwo.js\");\n/* harmony import */ var _ai_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ai.js */ \"./src/scripts/ai.js\");\n\n\n\n\nconst canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\n\n//buttons\nconst spawnBtnPlayer = document.getElementById(\"spawn-btn-player\");\nconst spawnBtnAI = document.getElementById(\"spawn-btn-ai\");\nconst playAgain = document.getElementById(\"play-again\");\nconst winMessage = document.getElementById(\"win-message\");\nconst playerOneSpawnX = 285; // Board.gameFieldX + (Tile.size * 1.5), \nconst playerOneSpawnY = 175; // Board.gameFieldY + (Tile.size * 1.5)\nconst playerTwoSpawnX = 935; // Board.mapWidth + (Tile.size * 2.7)\nconst playerTwoSpawnY = 675; // Board.mapHeight + (Tile.size / 2)\nconst aiSpawnX = 825; // Board.mapWidth + Tile.size / 2\nconst aiSpawnY = 625; // Board.mapHeight - Tile.size / 2\n\nplayAgain.style.display = \"none\";\nwinMessage.style.display = \"none\";\nspawnBtnPlayer.addEventListener(\"click\", () => {\n  startPlayerGame();\n  clearButtons();\n});\nspawnBtnAI.addEventListener(\"click\", () => {\n  startAiGame();\n  clearButtons();\n});\nplayAgain.addEventListener('click', () => {\n  playerTwo instanceof _ai_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"] ? startAiGame() : startPlayerGame();\n  clearButtons();\n});\nlet playerOne;\nlet playerTwo;\nlet board;\nfunction endGame(winner) {\n  winMessage.innerText = `${winner} wins!`;\n  winMessage.style.display = \"block\";\n  spawnBtnPlayer.style.display = \"block\";\n  spawnBtnAI.style.display = \"block\";\n  playAgain.style.display = \"block\";\n  _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].stopTimer();\n}\nfunction clearButtons() {\n  playAgain.style.display = \"none\";\n  winMessage.style.display = \"none\";\n  spawnBtnPlayer.style.display = \"none\";\n  spawnBtnAI.style.display = \"none\";\n}\nfunction localAnimate(player1, player2, board) {\n  window.requestAnimationFrame(() => {\n    c.clearRect(0, 0, canvas.width, canvas.height);\n    if (board.gameover) {\n      board.draw();\n      return;\n    }\n    board.draw();\n    if (_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].shrinkCounter >= 6 && player1.alive && !player2.victory) {\n      if (player1.alive && !player2.victory) {\n        winMessage.innerText = \"Blue wins!\";\n        winMessage.style.display = \"block\";\n      }\n      if (player2.alive && !player1.victory) {\n        winMessage.innerText = \"Red wins!\";\n        winMessage.style.display = \"block\";\n      }\n      spawnBtnPlayer.style.display = \"block\"; // show the spawn button\n      spawnBtnAI.style.display = \"block\"; // show the spawn button\n      playAgain.style.display = \"block\";\n      return;\n    }\n    if (player1 && player2) {\n      if (player1.alive && !player2.victory) {\n        player1.checkBoundary();\n        player2.checkBoundary();\n        player1.draw();\n      } else {\n        endGame(\"Blue\");\n        return; // stop the animation\n      }\n\n      if (player2.alive && !player1.victory) {\n        player1.checkBoundary();\n        player2.checkBoundary();\n        player2.draw();\n      } else {\n        endGame(\"Red\");\n        return; // stop the animation\n      }\n    }\n\n    localAnimate(player1, player2, board);\n  });\n}\nfunction startPlayerGame() {\n  board && board.reset();\n  playerOne && playerOne.reset();\n  playerTwo && playerTwo.reset();\n  board = undefined;\n  playerOne = undefined;\n  playerTwo = undefined;\n  board = new _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n  playerOne = new _player_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](playerOneSpawnX, playerOneSpawnY);\n  playerTwo = new _playertwo_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](playerTwoSpawnX, playerTwoSpawnY);\n  _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].startTimer();\n  playerOne.currentPlace.occupied = true;\n  playerTwo.currentPlace.occupied = true;\n  console.log(playerOne, playerTwo);\n  localAnimate(playerOne, playerTwo, board);\n}\nfunction aiAnimate(player1, ai, board) {\n  window.requestAnimationFrame(() => {\n    c.clearRect(0, 0, canvas.width, canvas.height);\n    if (!board.gameover) {\n      board.draw();\n    }\n    if (player1 && ai) {\n      if (player1.alive && !ai.victory) {\n        player1.checkBoundary();\n        ai.checkBoundary();\n        player1.draw();\n      } else {\n        endGame(\"Rambo\");\n        return;\n      }\n      if (ai.alive && !player1.victory) {\n        player1.checkBoundary();\n        ai.checkBoundary();\n        ai.draw();\n        ai.makeMove();\n        ai.makeMove();\n        ai.break();\n        // ai.makeMove();\n      } else {\n        endGame(\"Player\");\n        return; // \n      }\n    }\n\n    aiAnimate(player1, ai, board);\n  });\n}\nfunction startAiGame() {\n  board && board.reset();\n  playerOne && playerOne.reset();\n  playerTwo && playerTwo.reset();\n  board = undefined;\n  playerOne = undefined;\n  playerTwo = undefined;\n  board = new _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n  playerOne = new _player_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](playerOneSpawnX, playerOneSpawnY);\n  playerTwo = new _ai_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](aiSpawnX, aiSpawnY);\n  _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].startTimer();\n  playerOne.currentPlace.occupied = true;\n  playerTwo.currentPlace.occupied = true;\n\n  // console.log(playerOne, playerTwo);\n  // console.log(playerOne.currentPlace)\n  // console.log(playerTwo.currentPlace)\n\n  aiAnimate(playerOne, playerTwo, board);\n}\nconsole.log(_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mapWidth, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mapHeight, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldEndX, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldEndY);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n/* harmony import */ var _boundary_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boundary.js */ \"./src/scripts/boundary.js\");\n\n\n\nconst canvas = document.getElementById('canvas');\nconst c = canvas.getContext('2d');\nconst shovelRight = new Image();\nshovelRight.src = './images/shovels/Shovel_Red_Right.png';\nconst shovelLeft = new Image();\nshovelLeft.src = \"./images/shovels/Shovel_Red_Left.png\";\nconst shovelDown = new Image();\nshovelDown.src = \"./images/shovels/Shovel_Red_Down.png\";\nclass Player {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.dx;\n    this.dy;\n    this.radius = 15;\n    this.row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    this.col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    this.currentPlace = this.getPlayerTile();\n    this.alive = true;\n    this.victory = false;\n    this.direction = 'right';\n    this.image;\n    this.lastKey = '';\n    window.addEventListener('keydown', _ref => {\n      let {\n        key\n      } = _ref;\n      var nowTile;\n      var nextTile;\n      switch (key) {\n        case 'w':\n          this.lastKey = 'w';\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x, this.y - 50);\n          nowTile = this.getPlayerTile();\n          if (this.isTile(this.x, this.y - 50) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.y -= 50;\n            this.direction = 'up';\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case 'a':\n          this.lastKey = \"a\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x - 50, this.y);\n          if (this.isTile(this.x - 50, this.y) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.x -= 50;\n            this.direction = \"left\";\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case 's':\n          this.lastKey = \"s\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x, this.y + 50);\n          if (this.isTile(this.x, this.y + 50) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.y += 50;\n            this.direction = \"down\";\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case 'd':\n          this.lastKey = \"d\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x + 50, this.y);\n          if (this.isTile(this.x + 50, this.y) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.x += 50;\n            this.direction = \"right\";\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case ' ':\n          switch (this.lastKey) {\n            case \"w\":\n              if (this.isTile(this.x, this.y - 50)) {\n                this.breakTile(this.x, this.y - 50);\n              }\n              break;\n            case \"a\":\n              if (this.isTile(this.x - 50, this.y)) {\n                this.breakTile(this.x - 50, this.y);\n              }\n              break;\n            case \"s\":\n              if (this.isTile(this.x, this.y + 50)) {\n                this.breakTile(this.x, this.y + 50);\n              }\n              break;\n            case \"d\":\n              if (this.isTile(this.x + 50, this.y)) {\n                this.breakTile(this.x + 50, this.y);\n              }\n              break;\n          }\n          break;\n      }\n    });\n  }\n  draw() {\n    this.pickImage();\n    c.drawImage(this.image, this.x - 20, this.y - 20, 40, 40);\n  }\n  currentTile() {\n    let row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    // console.log([row,col])\n    return [row, col];\n  }\n  getPlayerTile() {\n    let row = this.currentTile()[0];\n    let col = this.currentTile()[1];\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]?.map[row][col];\n  }\n  getAnyTile(row, col) {\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTileXY(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n\n  // breakTiles\n\n  breakTile(x, y) {\n    let pos = this.xyConvert(x, y);\n    let row = pos[0];\n    let col = pos[1];\n    let tile = this.getAnyTile(row, col);\n    if (tile.health > 0) {\n      tile.health -= 1;\n      if (tile.health === 0) {\n        tile.visible = false;\n        if (tile.occupied) {\n          this.victory = true; // Checking if tile was occupied on last hit \n        }\n      }\n    }\n    // console.log(tile)\n  }\n\n  // Tile existence logic (use for boundary detection)\n\n  isTile(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    if (_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col] instanceof _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  xyConvert(x, y) {\n    let row = Math.floor((y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1);\n    return [row, col];\n  }\n  isDead() {\n    let tile = this.getPlayerTile();\n    if (tile.health === 0) {\n      this.alive = false;\n    } else {\n      this.alive = true;\n    }\n  }\n  reset() {\n    this.x = undefined;\n    this.y = undefined;\n    this.dx = undefined;\n    this.dy = undefined;\n    this.radius = undefined;\n    this.row = undefined;\n    this.col = undefined;\n    this.currentPlace = undefined;\n    this.alive = undefined;\n    this.victory = undefined;\n    this.lastkey = undefined;\n  }\n  pickImage() {\n    if (this.direction === 'right') {\n      this.image = shovelRight;\n    } else if (this.direction === 'left') {\n      this.image = shovelLeft;\n    } else if (this.direction === 'down') {\n      this.image = shovelDown;\n    } else {\n      this.image = shovelRight;\n    }\n  }\n  checkBoundary() {\n    const currentTile = this.getPlayerTile();\n    if (currentTile instanceof _boundary_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n      this.alive = false;\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/scripts/playertwo.js":
/*!**********************************!*\
  !*** ./src/scripts/playertwo.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n/* harmony import */ var _boundary_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boundary.js */ \"./src/scripts/boundary.js\");\n\n\n\nconst canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\nconst shovelRight = new Image();\nshovelRight.src = \"./images/shovels/Shovel_Blue_Right.png\";\nconst shovelLeft = new Image();\nshovelLeft.src = \"./images/shovels/Shovel_Blue_Left.png\";\nconst shovelDown = new Image();\nshovelDown.src = \"./images/shovels/Shovel_Blue_Down.png\";\nclass Playertwo {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.dx;\n    this.dy;\n    this.radius = 15;\n    this.row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    this.col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    this.currentPlace = this.getPlayerTile();\n    this.alive = true;\n    this.victory = false;\n    this.direction = 'left';\n    this.image;\n    this.lastKey = \"\";\n    window.addEventListener(\"keydown\", _ref => {\n      let {\n        key\n      } = _ref;\n      // console.log(key);\n      var nowTile;\n      var nextTile;\n      switch (key) {\n        case \"ArrowUp\":\n          this.lastKey = \"ArrowUp\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x, this.y - 50);\n          if (this.isTile(this.x, this.y - 50) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.y -= 50;\n            this.direction = \"up\";\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case \"ArrowLeft\":\n          this.lastKey = \"ArrowLeft\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x - 50, this.y);\n          if (this.isTile(this.x - 50, this.y) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.x -= 50;\n            this.direction = \"left\";\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case \"ArrowDown\":\n          this.lastKey = \"ArrowDown\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x, this.y + 50);\n          if (this.isTile(this.x, this.y + 50) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.y += 50;\n            this.direction = \"down\";\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case \"ArrowRight\":\n          this.lastKey = \"ArrowRight\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x + 50, this.y);\n          if (this.isTile(this.x + 50, this.y) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.direction = \"right\";\n            this.x += 50;\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case \"Enter\":\n          switch (this.lastKey) {\n            case \"ArrowUp\":\n              if (this.isTile(this.x, this.y - 50)) {\n                this.breakTile(this.x, this.y - 50);\n              }\n              break;\n            case \"ArrowLeft\":\n              if (this.isTile(this.x - 50, this.y)) {\n                this.breakTile(this.x - 50, this.y);\n              }\n              break;\n            case \"ArrowDown\":\n              if (this.isTile(this.x, this.y + 50)) {\n                this.breakTile(this.x, this.y + 50);\n              }\n              break;\n            case \"ArrowRight\":\n              if (this.isTile(this.x + 50, this.y)) {\n                this.breakTile(this.x + 50, this.y);\n              }\n              break;\n          }\n          console.log(\"hello\");\n          break;\n      }\n    });\n  }\n  draw() {\n    this.pickImage();\n    c.drawImage(this.image, this.x - 20, this.y - 20, 40, 40);\n  }\n  currentTile() {\n    let row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    // console.log([row, col]);\n    return [row, col];\n  }\n  getPlayerTile() {\n    let row = this.currentTile()[0];\n    let col = this.currentTile()[1];\n    // console.log([row, col]);\n    // console.log(Board.map[row][col]);\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTile(row, col) {\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTileXY(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  breakTile(x, y) {\n    let pos = this.xyConvert(x, y);\n    let row = pos[0];\n    let col = pos[1];\n    let tile = this.getAnyTile(row, col);\n    if (tile.health > 0) {\n      tile.health -= 1;\n      if (tile.health === 0) {\n        tile.visible = false;\n        if (tile.occupied) {\n          this.victory = true;\n        }\n      }\n    }\n  }\n\n  // Tile existence logic (use for boundary detection)\n\n  isTile(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    if (_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col] instanceof _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  xyConvert(x, y) {\n    let row = Math.floor((y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1);\n    return [row, col];\n  }\n\n  // Player dead logic\n\n  isDead() {\n    let tile = this.getPlayerTile();\n\n    // console.log(tile);\n    if (tile.health === 0) {\n      this.alive = false;\n    } else {\n      this.alive = true;\n    }\n  }\n  reset() {\n    this.x = undefined;\n    this.y = undefined;\n    this.dx = undefined;\n    this.dy = undefined;\n    this.radius = undefined;\n    this.row = undefined;\n    this.col = undefined;\n    this.currentPlace = undefined;\n    this.alive = undefined;\n    this.victory = undefined;\n    this.lastkey = undefined;\n  }\n  pickImage() {\n    if (this.direction === 'right') {\n      this.image = shovelRight;\n    } else if (this.direction === 'left') {\n      this.image = shovelLeft;\n    } else if (this.direction === 'down') {\n      this.image = shovelDown;\n    } else {\n      this.image = shovelRight;\n    }\n  }\n  checkBoundary() {\n    const currentTile = this.getPlayerTile();\n    if (currentTile instanceof _boundary_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n      this.alive = false;\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Playertwo);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/playertwo.js\n");

/***/ }),

/***/ "./src/scripts/tile.js":
/*!*****************************!*\
  !*** ./src/scripts/tile.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nclass Tile {\n  constructor(row, col) {\n    this.row = row;\n    this.col = col;\n    this.size = Tile.size;\n    this.health = 3;\n    this.visible = true;\n    this.occupied = false;\n  }\n}\n_defineProperty(Tile, \"size\", 50);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Tile);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy90aWxlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxJQUFJLENBQUM7RUFHVEMsV0FBV0EsQ0FBQ0MsR0FBRyxFQUFFQyxHQUFHLEVBQUU7SUFDcEIsSUFBSSxDQUFDRCxHQUFHLEdBQUdBLEdBQUc7SUFDZCxJQUFJLENBQUNDLEdBQUcsR0FBR0EsR0FBRztJQUNkLElBQUksQ0FBQ0MsSUFBSSxHQUFHSixJQUFJLENBQUNJLElBQUk7SUFDckIsSUFBSSxDQUFDQyxNQUFNLEdBQUcsQ0FBQztJQUNmLElBQUksQ0FBQ0MsT0FBTyxHQUFHLElBQUk7SUFDbkIsSUFBSSxDQUFDQyxRQUFRLEdBQUcsS0FBSztFQUN2QjtBQUNGO0FBQUNDLGVBQUEsQ0FYS1IsSUFBSSxVQUNNLEVBQUU7QUFZbEIsK0RBQWVBLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcGxlZWYvLi9zcmMvc2NyaXB0cy90aWxlLmpzPzBlYmQiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgVGlsZSB7XG4gIHN0YXRpYyBzaXplID0gNTA7XG5cbiAgY29uc3RydWN0b3Iocm93LCBjb2wpIHtcbiAgICB0aGlzLnJvdyA9IHJvdztcbiAgICB0aGlzLmNvbCA9IGNvbDtcbiAgICB0aGlzLnNpemUgPSBUaWxlLnNpemU7XG4gICAgdGhpcy5oZWFsdGggPSAzO1xuICAgIHRoaXMudmlzaWJsZSA9IHRydWU7XG4gICAgdGhpcy5vY2N1cGllZCA9IGZhbHNlO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRpbGU7Il0sIm5hbWVzIjpbIlRpbGUiLCJjb25zdHJ1Y3RvciIsInJvdyIsImNvbCIsInNpemUiLCJoZWFsdGgiLCJ2aXNpYmxlIiwib2NjdXBpZWQiLCJfZGVmaW5lUHJvcGVydHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/tile.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;