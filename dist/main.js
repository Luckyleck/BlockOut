/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _scripts_game_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/game.js */ \"./src/scripts/game.js\");\n\n\n// document.addEventListener(\"DOMContentLoaded\", () => {\n//     console.log(\"hello world\")\n//     const main = document.getElementById(\"main\");\n//     new Example(main);\n// });\n\n// var gridSize = 25;\n// var lineColor = \"#ccc\";\n\n// // Draw the grid lines\n// c.beginPath();\n// for (var x = 0; x <= canvas.width; x += gridSize) {\n//   c.moveTo(x, 0);\n//   c.lineTo(x, canvas.height);\n// }\n// for (var y = 0; y <= canvas.height; y += gridSize) {\n//   c.moveTo(0, y);\n//   c.lineTo(canvas.width, y);\n// }\n// c.strokeStyle = lineColor;\n// c.stroke();\n\n// console.log('hello')//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQXNDO0FBQ0Y7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NwbGVlZi8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCb2FyZCBmcm9tIFwiLi9zY3JpcHRzL2JvYXJkLmpzXCJcclxuaW1wb3J0IEdhbWUgZnJvbSBcIi4vc2NyaXB0cy9nYW1lLmpzXCJcclxuLy8gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT4ge1xyXG4vLyAgICAgY29uc29sZS5sb2coXCJoZWxsbyB3b3JsZFwiKVxyXG4vLyAgICAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcclxuLy8gICAgIG5ldyBFeGFtcGxlKG1haW4pO1xyXG4vLyB9KTtcclxuXHJcbi8vIHZhciBncmlkU2l6ZSA9IDI1O1xyXG4vLyB2YXIgbGluZUNvbG9yID0gXCIjY2NjXCI7XHJcblxyXG4vLyAvLyBEcmF3IHRoZSBncmlkIGxpbmVzXHJcbi8vIGMuYmVnaW5QYXRoKCk7XHJcbi8vIGZvciAodmFyIHggPSAwOyB4IDw9IGNhbnZhcy53aWR0aDsgeCArPSBncmlkU2l6ZSkge1xyXG4vLyAgIGMubW92ZVRvKHgsIDApO1xyXG4vLyAgIGMubGluZVRvKHgsIGNhbnZhcy5oZWlnaHQpO1xyXG4vLyB9XHJcbi8vIGZvciAodmFyIHkgPSAwOyB5IDw9IGNhbnZhcy5oZWlnaHQ7IHkgKz0gZ3JpZFNpemUpIHtcclxuLy8gICBjLm1vdmVUbygwLCB5KTtcclxuLy8gICBjLmxpbmVUbyhjYW52YXMud2lkdGgsIHkpO1xyXG4vLyB9XHJcbi8vIGMuc3Ryb2tlU3R5bGUgPSBsaW5lQ29sb3I7XHJcbi8vIGMuc3Ryb2tlKCk7XHJcblxyXG4vLyBjb25zb2xlLmxvZygnaGVsbG8nKSJdLCJuYW1lcyI6WyJCb2FyZCIsIkdhbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/ai.js":
/*!***************************!*\
  !*** ./src/scripts/ai.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n\n\nconst canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\nclass AI {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.alive = true;\n    this.radius = 15;\n    this.row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    this.col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    this.victory = false;\n    this.currentPlace = this.getPlayerTile();\n    this.lastKey = \"\";\n  }\n  makeMove() {\n    const directions = [\"north\", \"south\", \"east\", \"west\"];\n    let direction = directions[Math.floor(Math.random() * directions.length)];\n    var nowTile;\n    var nextTile;\n    switch (direction) {\n      case \"north\":\n        // this.keys.ArrowUp.pressed = true;\n        this.lastKey = \"north\";\n        nowTile = this.getPlayerTile();\n        nextTile = this.getAnyTileXY(this.x, this.y - 50);\n        if (this.isTile(this.x, this.y - 50) && nextTile.occupied === false && nextTile.health > 0) {\n          nowTile.occupied = false;\n          nextTile.occupied = true;\n          this.y -= 50;\n        }\n        if (this.alive && this.isDead()) {\n          this.alive = false;\n        }\n        break;\n      case \"west\":\n        // this.keys.ArrowLeft.pressed = true;\n        this.lastKey = \"west\";\n        nowTile = this.getPlayerTile();\n        nextTile = this.getAnyTileXY(this.x - 50, this.y);\n        if (this.isTile(this.x - 50, this.y) && nextTile.occupied === false && nextTile.health > 0) {\n          nowTile.occupied = false;\n          nextTile.occupied = true;\n          this.x -= 50;\n        }\n        if (this.alive && this.isDead()) {\n          this.alive = false;\n        }\n        break;\n      case \"south\":\n        // this.keys.ArrowDown.pressed = true;\n        this.lastKey = \"south\";\n        nowTile = this.getPlayerTile();\n        nextTile = this.getAnyTileXY(this.x, this.y + 50);\n        if (this.isTile(this.x, this.y + 50) && nextTile.occupied === false && nextTile.health > 0) {\n          nowTile.occupied = false;\n          nextTile.occupied = true;\n          this.y += 50;\n        }\n        if (this.alive && this.isDead()) {\n          this.alive = false;\n        }\n        break;\n      case \"east\":\n        // this.keys.ArrowRight.pressed = true;\n        this.lastKey = \"east\";\n        nowTile = this.getPlayerTile();\n        nextTile = this.getAnyTileXY(this.x + 50, this.y);\n        if (this.isTile(this.x + 50, this.y) && nextTile.occupied === false && nextTile.health > 0) {\n          nowTile.occupied = false;\n          nextTile.occupied = true;\n          this.x += 50;\n        }\n        if (this.alive && this.isDead()) {\n          this.alive = false;\n        }\n        break;\n    }\n  }\n  break() {\n    switch (this.lastKey) {\n      case \"north\":\n        if (this.isTile(this.x, this.y - 50)) {\n          this.breakTile(this.x, this.y - 50);\n        }\n        break;\n      case \"west\":\n        if (this.isTile(this.x - 50, this.y)) {\n          this.breakTile(this.x - 50, this.y);\n        }\n        break;\n      case \"south\":\n        if (this.isTile(this.x, this.y + 50)) {\n          this.breakTile(this.x, this.y + 50);\n        }\n        break;\n      case \"east\":\n        if (this.isTile(this.x + 50, this.y)) {\n          this.breakTile(this.x + 50, this.y);\n        }\n        break;\n    }\n  }\n  draw() {\n    c.beginPath();\n    c.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    c.fillStyle = \"yellow\";\n    c.fill();\n    c.closePath();\n  }\n  currentTile() {\n    let row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    // console.log([row, col]);\n    return [row, col];\n  }\n  getPlayerTile() {\n    let row = this.currentTile()[0];\n    let col = this.currentTile()[1];\n    // console.log([row, col]);\n    // console.log(Board.map[row][col]);\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTile(row, col) {\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTileXY(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n\n  // breakTiles\n\n  breakTile(x, y) {\n    let pos = this.xyConvert(x, y);\n    let row = pos[0];\n    let col = pos[1];\n    let tile = this.getAnyTile(row, col);\n    if (tile.health > 0) {\n      tile.health -= 1;\n      if (tile.health === 0) {\n        tile.visible = false;\n        if (tile.occupied) {\n          this.victory = true;\n        }\n      }\n    }\n    // console.log(tile);\n  }\n\n  // Tile existence logic (use for boundary detection)\n\n  isTile(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    if (_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col] instanceof _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  xyConvert(x, y) {\n    let row = Math.floor((y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1);\n    return [row, col];\n  }\n\n  // Player dead logic\n\n  isDead() {\n    let tile = this.getPlayerTile();\n\n    // console.log(tile);\n    if (tile.health === 0) {\n      this.alive = false;\n    } else {\n      this.alive = true;\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (AI);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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O0lBQ1AsSUFBSWEsSUFBSSxHQUFHLElBQUksQ0FBQzFCLGFBQWEsRUFBRTs7SUFFL0I7SUFDQSxJQUFJMEIsSUFBSSxDQUFDZCxNQUFNLEtBQUssQ0FBQyxFQUFFO01BQ3JCLElBQUksQ0FBQ3ZCLEtBQUssR0FBRyxLQUFLO0lBQ3BCLENBQUMsTUFBTTtNQUNMLElBQUksQ0FBQ0EsS0FBSyxHQUFHLElBQUk7SUFDbkI7RUFDRjtBQUNGO0FBRUEsK0RBQWVKLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcGxlZWYvLi9zcmMvc2NyaXB0cy9haS5qcz8wOTNlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCb2FyZCBmcm9tIFwiLi9ib2FyZC5qc1wiO1xyXG5pbXBvcnQgVGlsZSBmcm9tIFwiLi90aWxlLmpzXCI7XHJcblxyXG5jb25zdCBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKTtcclxuY29uc3QgYyA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XHJcblxyXG5jbGFzcyBBSSB7XHJcbiAgY29uc3RydWN0b3IoeCwgeSkge1xyXG4gICAgdGhpcy54ID0geDtcclxuICAgIHRoaXMueSA9IHk7XHJcbiAgICB0aGlzLmFsaXZlID0gdHJ1ZTtcclxuICAgIHRoaXMucmFkaXVzID0gMTU7XHJcbiAgICB0aGlzLnJvdyA9IE1hdGguZmxvb3IoKHRoaXMueSAtIEJvYXJkLnBsYXlGaWVsZFN0YXJ0WSkgLyBUaWxlLnNpemUgKyAxKTsgLy8gcm93IGlzIHlcclxuICAgIHRoaXMuY29sID0gTWF0aC5mbG9vcigodGhpcy54IC0gQm9hcmQucGxheUZpZWxkU3RhcnRYKSAvIFRpbGUuc2l6ZSArIDEpOyAvLyBjb2wgaXMgeFxyXG4gICAgdGhpcy52aWN0b3J5ID0gZmFsc2U7XHJcbiAgICB0aGlzLmN1cnJlbnRQbGFjZSA9IHRoaXMuZ2V0UGxheWVyVGlsZSgpO1xyXG4gICAgdGhpcy5sYXN0S2V5ID0gXCJcIlxyXG4gIH1cclxuXHJcbiAgbWFrZU1vdmUoKSB7XHJcbiAgICBjb25zdCBkaXJlY3Rpb25zID0gW1wibm9ydGhcIiwgXCJzb3V0aFwiLCBcImVhc3RcIiwgXCJ3ZXN0XCJdO1xyXG5cclxuICAgIGxldCBkaXJlY3Rpb24gPSBkaXJlY3Rpb25zW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGRpcmVjdGlvbnMubGVuZ3RoKV07XHJcbiAgICB2YXIgbm93VGlsZTtcclxuICAgIHZhciBuZXh0VGlsZTtcclxuICAgIHN3aXRjaCAoZGlyZWN0aW9uKSB7XHJcbiAgICAgIGNhc2UgXCJub3J0aFwiOlxyXG4gICAgICAgIC8vIHRoaXMua2V5cy5BcnJvd1VwLnByZXNzZWQgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMubGFzdEtleSA9IFwibm9ydGhcIjtcclxuICAgICAgICBub3dUaWxlID0gdGhpcy5nZXRQbGF5ZXJUaWxlKCk7XHJcbiAgICAgICAgbmV4dFRpbGUgPSB0aGlzLmdldEFueVRpbGVYWSh0aGlzLngsIHRoaXMueSAtIDUwKTtcclxuICAgICAgICBpZiAodGhpcy5pc1RpbGUodGhpcy54LCB0aGlzLnkgLSA1MCkgJiYgbmV4dFRpbGUub2NjdXBpZWQgPT09IGZhbHNlICYmIG5leHRUaWxlLmhlYWx0aCA+IDApIHtcclxuICAgICAgICAgIG5vd1RpbGUub2NjdXBpZWQgPSBmYWxzZTtcclxuICAgICAgICAgIG5leHRUaWxlLm9jY3VwaWVkID0gdHJ1ZTtcclxuICAgICAgICAgIHRoaXMueSAtPSA1MDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuYWxpdmUgJiYgdGhpcy5pc0RlYWQoKSkge1xyXG4gICAgICAgICAgdGhpcy5hbGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSBcIndlc3RcIjpcclxuICAgICAgICAvLyB0aGlzLmtleXMuQXJyb3dMZWZ0LnByZXNzZWQgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMubGFzdEtleSA9IFwid2VzdFwiO1xyXG4gICAgICAgIG5vd1RpbGUgPSB0aGlzLmdldFBsYXllclRpbGUoKTtcclxuICAgICAgICBuZXh0VGlsZSA9IHRoaXMuZ2V0QW55VGlsZVhZKHRoaXMueCAtIDUwLCB0aGlzLnkpO1xyXG4gICAgICAgIGlmICh0aGlzLmlzVGlsZSh0aGlzLnggLSA1MCwgdGhpcy55KSAmJiBuZXh0VGlsZS5vY2N1cGllZCA9PT0gZmFsc2UgJiYgbmV4dFRpbGUuaGVhbHRoID4gMCApIHtcclxuICAgICAgICAgIG5vd1RpbGUub2NjdXBpZWQgPSBmYWxzZTtcclxuICAgICAgICAgIG5leHRUaWxlLm9jY3VwaWVkID0gdHJ1ZTtcclxuICAgICAgICAgIHRoaXMueCAtPSA1MDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuYWxpdmUgJiYgdGhpcy5pc0RlYWQoKSkge1xyXG4gICAgICAgICAgdGhpcy5hbGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSBcInNvdXRoXCI6XHJcbiAgICAgICAgLy8gdGhpcy5rZXlzLkFycm93RG93bi5wcmVzc2VkID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLmxhc3RLZXkgPSBcInNvdXRoXCI7XHJcbiAgICAgICAgbm93VGlsZSA9IHRoaXMuZ2V0UGxheWVyVGlsZSgpO1xyXG4gICAgICAgIG5leHRUaWxlID0gdGhpcy5nZXRBbnlUaWxlWFkodGhpcy54LCB0aGlzLnkgKyA1MCk7XHJcbiAgICAgICAgaWYgKHRoaXMuaXNUaWxlKHRoaXMueCwgdGhpcy55ICsgNTApICYmIG5leHRUaWxlLm9jY3VwaWVkID09PSBmYWxzZSAmJiBuZXh0VGlsZS5oZWFsdGggPiAwKSB7XHJcbiAgICAgICAgICBub3dUaWxlLm9jY3VwaWVkID0gZmFsc2U7XHJcbiAgICAgICAgICBuZXh0VGlsZS5vY2N1cGllZCA9IHRydWU7XHJcbiAgICAgICAgICB0aGlzLnkgKz0gNTA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmFsaXZlICYmIHRoaXMuaXNEZWFkKCkpIHtcclxuICAgICAgICAgIHRoaXMuYWxpdmUgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgXCJlYXN0XCI6XHJcbiAgICAgICAgLy8gdGhpcy5rZXlzLkFycm93UmlnaHQucHJlc3NlZCA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5sYXN0S2V5ID0gXCJlYXN0XCI7XHJcbiAgICAgICAgbm93VGlsZSA9IHRoaXMuZ2V0UGxheWVyVGlsZSgpO1xyXG4gICAgICAgIG5leHRUaWxlID0gdGhpcy5nZXRBbnlUaWxlWFkodGhpcy54ICsgNTAsIHRoaXMueSk7XHJcbiAgICAgICAgaWYgKHRoaXMuaXNUaWxlKHRoaXMueCArIDUwLCB0aGlzLnkpICYmIG5leHRUaWxlLm9jY3VwaWVkID09PSBmYWxzZSAmJiBuZXh0VGlsZS5oZWFsdGggPiAwKSB7XHJcbiAgICAgICAgICBub3dUaWxlLm9jY3VwaWVkID0gZmFsc2U7XHJcbiAgICAgICAgICBuZXh0VGlsZS5vY2N1cGllZCA9IHRydWU7XHJcbiAgICAgICAgICB0aGlzLnggKz0gNTA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmFsaXZlICYmIHRoaXMuaXNEZWFkKCkpIHtcclxuICAgICAgICAgIHRoaXMuYWxpdmUgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBicmVhaygpIHsgXHJcbiAgICBzd2l0Y2ggKHRoaXMubGFzdEtleSkge1xyXG4gICAgICBjYXNlIFwibm9ydGhcIjpcclxuICAgICAgICBpZiAodGhpcy5pc1RpbGUodGhpcy54LCB0aGlzLnkgLSA1MCkpIHtcclxuICAgICAgICAgIHRoaXMuYnJlYWtUaWxlKHRoaXMueCwgdGhpcy55IC0gNTApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSBcIndlc3RcIjpcclxuICAgICAgICBpZiAodGhpcy5pc1RpbGUodGhpcy54IC0gNTAsIHRoaXMueSkpIHtcclxuICAgICAgICAgIHRoaXMuYnJlYWtUaWxlKHRoaXMueCAtIDUwLCB0aGlzLnkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSBcInNvdXRoXCI6XHJcbiAgICAgICAgaWYgKHRoaXMuaXNUaWxlKHRoaXMueCwgdGhpcy55ICsgNTApKSB7XHJcbiAgICAgICAgICB0aGlzLmJyZWFrVGlsZSh0aGlzLngsIHRoaXMueSArIDUwKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgXCJlYXN0XCI6XHJcbiAgICAgICAgaWYgKHRoaXMuaXNUaWxlKHRoaXMueCArIDUwLCB0aGlzLnkpKSB7XHJcbiAgICAgICAgICB0aGlzLmJyZWFrVGlsZSh0aGlzLnggKyA1MCwgdGhpcy55KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBkcmF3KCkge1xyXG4gICAgYy5iZWdpblBhdGgoKTtcclxuICAgIGMuYXJjKHRoaXMueCwgdGhpcy55LCB0aGlzLnJhZGl1cywgMCwgTWF0aC5QSSAqIDIpO1xyXG4gICAgYy5maWxsU3R5bGUgPSBcInllbGxvd1wiO1xyXG4gICAgYy5maWxsKCk7XHJcbiAgICBjLmNsb3NlUGF0aCgpO1xyXG4gIH1cclxuXHJcbiAgY3VycmVudFRpbGUoKSB7XHJcbiAgICBsZXQgcm93ID0gTWF0aC5mbG9vcigodGhpcy55IC0gQm9hcmQucGxheUZpZWxkU3RhcnRZKSAvIFRpbGUuc2l6ZSArIDEpOyAvLyByb3cgaXMgeVxyXG4gICAgbGV0IGNvbCA9IE1hdGguZmxvb3IoKHRoaXMueCAtIEJvYXJkLnBsYXlGaWVsZFN0YXJ0WCkgLyBUaWxlLnNpemUgKyAxKTsgLy8gY29sIGlzIHhcclxuICAgIC8vIGNvbnNvbGUubG9nKFtyb3csIGNvbF0pO1xyXG4gICAgcmV0dXJuIFtyb3csIGNvbF07XHJcbiAgfVxyXG5cclxuICBnZXRQbGF5ZXJUaWxlKCkge1xyXG4gICAgbGV0IHJvdyA9IHRoaXMuY3VycmVudFRpbGUoKVswXTtcclxuICAgIGxldCBjb2wgPSB0aGlzLmN1cnJlbnRUaWxlKClbMV07XHJcbiAgICAvLyBjb25zb2xlLmxvZyhbcm93LCBjb2xdKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKEJvYXJkLm1hcFtyb3ddW2NvbF0pO1xyXG4gICAgcmV0dXJuIEJvYXJkLm1hcFtyb3ddW2NvbF07XHJcbiAgfVxyXG5cclxuICBnZXRBbnlUaWxlKHJvdywgY29sKSB7XHJcbiAgICByZXR1cm4gQm9hcmQubWFwW3Jvd11bY29sXTtcclxuICB9XHJcblxyXG4gIGdldEFueVRpbGVYWSh4LCB5KSB7XHJcbiAgICBsZXQgdGlsZSA9IHRoaXMueHlDb252ZXJ0KHgsIHkpO1xyXG4gICAgbGV0IHJvdyA9IHRpbGVbMF07XHJcbiAgICBsZXQgY29sID0gdGlsZVsxXTtcclxuXHJcbiAgICByZXR1cm4gQm9hcmQubWFwW3Jvd11bY29sXTtcclxuICB9XHJcblxyXG4gIC8vIGJyZWFrVGlsZXNcclxuXHJcbiAgYnJlYWtUaWxlKHgsIHkpIHtcclxuICAgIGxldCBwb3MgPSB0aGlzLnh5Q29udmVydCh4LCB5KTtcclxuICAgIGxldCByb3cgPSBwb3NbMF07XHJcbiAgICBsZXQgY29sID0gcG9zWzFdO1xyXG5cclxuICAgIGxldCB0aWxlID0gdGhpcy5nZXRBbnlUaWxlKHJvdywgY29sKTtcclxuICAgIGlmICh0aWxlLmhlYWx0aCA+IDApIHtcclxuICAgICAgdGlsZS5oZWFsdGggLT0gMTtcclxuICAgICAgaWYgKHRpbGUuaGVhbHRoID09PSAwKSB7XHJcbiAgICAgICAgdGlsZS52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgaWYgKHRpbGUub2NjdXBpZWQpIHtcclxuICAgICAgICAgIHRoaXMudmljdG9yeSA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAvLyBjb25zb2xlLmxvZyh0aWxlKTtcclxuICB9XHJcblxyXG4gIC8vIFRpbGUgZXhpc3RlbmNlIGxvZ2ljICh1c2UgZm9yIGJvdW5kYXJ5IGRldGVjdGlvbilcclxuXHJcbiAgaXNUaWxlKHgsIHkpIHtcclxuICAgIGxldCB0aWxlID0gdGhpcy54eUNvbnZlcnQoeCwgeSk7XHJcbiAgICBsZXQgcm93ID0gdGlsZVswXTtcclxuICAgIGxldCBjb2wgPSB0aWxlWzFdO1xyXG5cclxuICAgIGlmIChCb2FyZC5tYXBbcm93XVtjb2xdIGluc3RhbmNlb2YgVGlsZSkge1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHh5Q29udmVydCh4LCB5KSB7XHJcbiAgICBsZXQgcm93ID0gTWF0aC5mbG9vcigoeSAtIEJvYXJkLnBsYXlGaWVsZFN0YXJ0WSkgLyBUaWxlLnNpemUgKyAxKTsgLy8gcm93IGlzIHlcclxuICAgIGxldCBjb2wgPSBNYXRoLmZsb29yKCh4IC0gQm9hcmQucGxheUZpZWxkU3RhcnRYKSAvIFRpbGUuc2l6ZSArIDEpO1xyXG5cclxuICAgIHJldHVybiBbcm93LCBjb2xdO1xyXG4gIH1cclxuXHJcbiAgLy8gUGxheWVyIGRlYWQgbG9naWNcclxuXHJcbiAgaXNEZWFkKCkge1xyXG4gICAgbGV0IHRpbGUgPSB0aGlzLmdldFBsYXllclRpbGUoKTtcclxuXHJcbiAgICAvLyBjb25zb2xlLmxvZyh0aWxlKTtcclxuICAgIGlmICh0aWxlLmhlYWx0aCA9PT0gMCkge1xyXG4gICAgICB0aGlzLmFsaXZlID0gZmFsc2U7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmFsaXZlID0gdHJ1ZTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFJIl0sIm5hbWVzIjpbIkJvYXJkIiwiVGlsZSIsImNhbnZhcyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJjIiwiZ2V0Q29udGV4dCIsIkFJIiwiY29uc3RydWN0b3IiLCJ4IiwieSIsImFsaXZlIiwicmFkaXVzIiwicm93IiwiTWF0aCIsImZsb29yIiwicGxheUZpZWxkU3RhcnRZIiwic2l6ZSIsImNvbCIsInBsYXlGaWVsZFN0YXJ0WCIsInZpY3RvcnkiLCJjdXJyZW50UGxhY2UiLCJnZXRQbGF5ZXJUaWxlIiwibGFzdEtleSIsIm1ha2VNb3ZlIiwiZGlyZWN0aW9ucyIsImRpcmVjdGlvbiIsInJhbmRvbSIsImxlbmd0aCIsIm5vd1RpbGUiLCJuZXh0VGlsZSIsImdldEFueVRpbGVYWSIsImlzVGlsZSIsIm9jY3VwaWVkIiwiaGVhbHRoIiwiaXNEZWFkIiwiYnJlYWsiLCJicmVha1RpbGUiLCJkcmF3IiwiYmVnaW5QYXRoIiwiYXJjIiwiUEkiLCJmaWxsU3R5bGUiLCJmaWxsIiwiY2xvc2VQYXRoIiwiY3VycmVudFRpbGUiLCJtYXAiLCJnZXRBbnlUaWxlIiwidGlsZSIsInh5Q29udmVydCIsInBvcyIsInZpc2libGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/ai.js\n");

/***/ }),

/***/ "./src/scripts/board.js":
/*!******************************!*\
  !*** ./src/scripts/board.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n/* harmony import */ var _boundary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./boundary.js */ \"./src/scripts/boundary.js\");\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./player.js */ \"./src/scripts/player.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n// import grass from './img/grass.png'\n\nconst canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\n\n// c.fillRect(20, 20, 20, 20)\n\nclass Board {\n  // Map total Width and Height\n\n  // Map Start x and y\n  //300\n  //100\n\n  // Map End x and y\n\n  // Playfield Width and Height\n\n  // Playfield Start x and y\n\n  constructor() {\n    // this.tiles = []\n    for (let i = 0; i < Board.map.length; i++) {\n      for (let j = 0; j < Board.map[i].length; j++) {\n        if (Board.map[i][j] === \" \") {\n          Board.map[i][j] = new _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](i,\n          // row\n          j // col\n          );\n        } else {\n          Board.map[i][j] = new _boundary_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](i,\n          // row\n          j // col\n          );\n        }\n      }\n    }\n  }\n\n  draw() {\n    const startX = canvas.width / 2 / 2 / 2;\n    const startY = canvas.height / 2 / 2 / 2;\n    Board.map.forEach(row => {\n      row.forEach(tile => {\n        // Col first, then row\n        if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && tile.health === 3) {\n          //   console.log(tile.row, tile.col);\n          c.fillStyle = \"green\";\n          c.fillRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n          c.lineWidth = 2;\n          c.strokeStyle = \"black\"; // outline color\n          c.strokeRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n          // c.drawImage(grass,startX + (tile.col * tile.size), startY + (tile.row * tile.size), tile.size, tile.size)\n        } else if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && tile.health === 2) {\n          c.fillStyle = \"#80461B\";\n          c.fillRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n          c.lineWidth = 2;\n          c.strokeStyle = \"black\";\n          c.strokeRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n        } else if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && tile.health === 1) {\n          c.fillStyle = \"#362419\";\n          c.fillRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n          c.lineWidth = 2;\n          c.strokeStyle = \"black\";\n          c.strokeRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n        } else if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && tile.health === 0) {\n          c.fillStyle = \"#ffebcd\"; // color of background\n          c.fillRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n          c.lineWidth = 2;\n          c.strokeStyle = \"black\";\n          c.strokeRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n        } else if (tile instanceof _boundary_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n          c.fillStyle = \"grey\";\n          c.fillRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n          c.lineWidth = 2;\n          c.strokeStyle = \"black\";\n          c.strokeRect(startX + tile.col * tile.size, startY + tile.row * tile.size, tile.size, tile.size);\n        }\n      });\n    });\n  }\n\n  //   shrink() {\n  //     // Remove the first and last row\n  //     Board.map.shift();\n  //     Board.map.pop();\n\n  //     // Remove the first and last column from each remaining row\n  //     for (let i = 0; i < Board.map.length; i++) {\n  //       Board.map[i].shift();\n  //       Board.map[i].pop();\n  //     }\n\n  //     // Update the map width and height to reflect the new size\n  //     Board.mapWidth -= Tile.size * 2;\n  //     Board.mapHeight -= Tile.size * 2;\n\n  //     // Update the playfield width and height to reflect the new size\n  //     Board.playFieldWidth = Board.mapWidth - Tile.size * 2;\n  //     Board.playFieldHeight = Board.mapHeight - Tile.size * 2;\n\n  //     // Update the playfield start x and y to reflect the new size\n  //     Board.playFieldStartX = Board.gameFieldX + Tile.size;\n  //     Board.playFieldStartY = Board.gameFieldY + Tile.size;\n\n  //     // Create a new border around the playfield\n  //     for (let i = 0; i < Board.map.length; i++) {\n  //       if (i === 0 || i === Board.map.length - 1) {\n  //         for (let j = 0; j < Board.map[i].length; j++) {\n  //           Board.map[i][j] = new Boundary(i, j);\n  //         }\n  //       } else {\n  //         Board.map[i][0] = new Boundary(i, 0);\n  //         Board.map[i][Board.map[i].length - 1] = new Boundary(\n  //           i,\n  //           Board.map[i].length - 1\n  //         );\n  //       }\n  //     }\n\n  //     this.draw();\n  //   }\n}\n_defineProperty(Board, \"tiles\", []);\n_defineProperty(Board, \"mapn_defineProperty(Board, \"mapWidth\", Board.map[0].length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size);\n_defineProperty(Board, \"mapHeight\", Board.map.length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size);\n_defineProperty(Board, \"gameFieldX\", canvas.width / 2 / 2 / 2);\n_defineProperty(Board, \"gameFieldY\", canvas.height / 2 / 2 / 2);\n_defineProperty(Board, \"gameFieldEndX\", Board.map[0].length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 3);\n_defineProperty(Board, \"gameFieldEndY\", Board.map.length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2);\n_defineProperty(Board, \"playFieldWidth\", Board.mapWidth - _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2);\n_defineProperty(Board, \"playFieldHeight\", Board.mapHeight - _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2);\n_defineProperty(Board, \"playFieldStartX\", Board.gameFieldX + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size);\n_defineProperty(Board, \"playFieldStartY\", Board.gameFieldY + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size);\nlet mouse = {\n  x: undefined,\n  y: undefined\n};\nwindow.addEventListener('mousemove', function (event) {\n  mouse.x = event.x;\n  mouse.y = event.y;\n  // console.log(mouse)\n});\n\nwindow.addEventListener(\"mousemove\", function (event) {\n  const gameFieldX = canvas.width / 4;\n  const gameFieldY = canvas.height / 8;\n  const tileWidth = Board.map[0][0].size;\n  const tileHeight = Board.map[0][0].size;\n  const mouseX = event.clientX - canvas.getBoundingClientRect().left;\n  const mouseY = event.clientY - canvas.getBoundingClientRect().top;\n  const tileX = Math.floor((mouseX - gameFieldX) / tileWidth);\n  const tileY = Math.floor((mouseY - gameFieldY) / tileHeight);\n  if (tileX >= 0 && tileX < Board.map[0].length && tileY >= 0 && tileY < Board.map.length) {\n    const tile = Board.map[tileY][tileX];\n    //   console.log(tile);\n  }\n});\n\n// var gridSize = 25;\n// var lineColor = \"#ccc\";\n\n// // Draw the grid lines\n// c.beginPath();\n// for (var x = 0; x <= canvas.width; x += gridSize) {\n//   c.moveTo(x, 0);\n//   c.lineTo(x, canvas.height);\n// }\n// for (var y = 0; y <= canvas.height; y += gridSize) {\n//   c.moveTo(0, y);\n//   c.lineTo(canvas.width, y);\n// }\n// c.strokeStyle = lineColor;\n// c.stroke();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Board);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/board.js\n");

/***/ }),

/***/ "./src/scripts/boundary.js":
/*!*********************************!*\
  !*** ./src/scripts/boundary.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nclass Boundary {\n  constructor(row, col) {\n    this.row = row;\n    this.col = col;\n    this.size = Boundary.size;\n    this.occupied = false;\n  }\n}\n_defineProperty(Boundary, \"size\", 50);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Boundary);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9ib3VuZGFyeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsUUFBUSxDQUFDO0VBR1hDLFdBQVdBLENBQUNDLEdBQUcsRUFBQ0MsR0FBRyxFQUFFO0lBQ2pCLElBQUksQ0FBQ0QsR0FBRyxHQUFHQSxHQUFHO0lBQ2QsSUFBSSxDQUFDQyxHQUFHLEdBQUdBLEdBQUc7SUFDZCxJQUFJLENBQUNDLElBQUksR0FBR0osUUFBUSxDQUFDSSxJQUFJO0lBQ3pCLElBQUksQ0FBQ0MsUUFBUSxHQUFHLEtBQUs7RUFDekI7QUFDSjtBQUFDQyxlQUFBLENBVEtOLFFBQVEsVUFDSSxFQUFFO0FBVXBCLCtEQUFlQSxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3BsZWVmLy4vc3JjL3NjcmlwdHMvYm91bmRhcnkuanM/MWYwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBCb3VuZGFyeSB7XHJcbiAgICBzdGF0aWMgc2l6ZSA9IDUwO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHJvdyxjb2wpIHtcclxuICAgICAgICB0aGlzLnJvdyA9IHJvdzsgXHJcbiAgICAgICAgdGhpcy5jb2wgPSBjb2xcclxuICAgICAgICB0aGlzLnNpemUgPSBCb3VuZGFyeS5zaXplO1xyXG4gICAgICAgIHRoaXMub2NjdXBpZWQgPSBmYWxzZTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQm91bmRhcnkiXSwibmFtZXMiOlsiQm91bmRhcnkiLCJjb25zdHJ1Y3RvciIsInJvdyIsImNvbCIsInNpemUiLCJvY2N1cGllZCIsIl9kZWZpbmVQcm9wZXJ0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/boundary.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player.js */ \"./src/scripts/player.js\");\n/* harmony import */ var _playertwo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./playertwo.js */ \"./src/scripts/playertwo.js\");\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n/* harmony import */ var _ai_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ai.js */ \"./src/scripts/ai.js\");\n\n\n\n\n\n\n// const images = [\n//   './img/blockout/frame_002_delay-0.03s.png'\n// './img/blockout/frame_003_delay-0.03s.png',\n// './img/blockout/frame_004_delay-0.03s.png',\n// './img/blockout/frame_005_delay-0.03s.png',\n// './img/blockout/frame_006_delay-0.03s.png',\n// './img/blockout/frame_007_delay-0.03s.png',\n// './img/blockout/frame_008_delay-0.03s.png',\n// './img/blockout/frame_009_delay-0.03s.png',\n// './img/blockout/frame_010_delay-0.03s.png',\n// './img/blockout/frame_011_delay-0.03s.png',\n// './img/blockout/frame_012_delay-0.03s.png',\n// './img/blockout/frame_013_delay-0.03s.png',\n// './img/blockout/frame_014_delay-0.03s.png',\n// './img/blockout/frame_015_delay-0.03s.png',\n// './img/blockout/frame_016_delay-0.03s.png',\n// './img/blockout/frame_017_delay-0.03s.png',\n// './img/blockout/frame_018_delay-0.03s.png',\n// './img/blockout/frame_019_delay-0.03s.png',\n// './img/blockout/frame_020_delay-0.03s.png',\n// './img/blockout/frame_021_delay-0.03s.png',\n// './img/blockout/frame_022_delay-0.03s.png',\n// './img/blockout/frame_023_delay-0.03s.png',\n// './img/blockout/frame_024_delay-0.03s.png',\n// './img/blockout/frame_025_delay-0.03s.png',\n// './img/blockout/frame_026_delay-0.03s.png',\n// './img/blockout/frame_027_delay-0.03s.png',\n// './img/blockout/frame_028_delay-0.03s.png',\n// './img/blockout/frame_029_delay-0.03s.png',\n// './img/blockout/frame_030_delay-0.03s.png',\n// './img/blockout/frame_031_delay-0.03s.png',\n// './img/blockout/frame_032_delay-0.03s.png',\n// './img/blockout/frame_033_delay-0.03s.png',\n// './img/blockout/frame_034_delay-0.03s.png',\n// './img/blockout/frame_035_delay-0.03s.png',\n// './img/blockout/frame_036_delay-0.03s.png',\n// './img/blockout/frame_037_delay-0.03s.png',\n// './img/blockout/frame_038_delay-0.03s.png',\n// './img/blockout/frame_039_delay-0.03s.png',\n// './img/blockout/frame_040_delay-0.03s.png',\n// './img/blockout/frame_041_delay-0.03s.png',\n// './img/blockout/frame_042_delay-0.03s.png',\n// './img/blockout/frame_043_delay-0.03s.png',\n// './img/blockout/frame_044_delay-0.03s.png',\n// './img/blockout/frame_045_delay-0.03s.png',\n// './img/blockout/frame_046_delay-0.03s.png',\n// './img/blockout/frame_047_delay-0.03s.png',\n// './img/blockout/frame_048_delay-0.03s.png',\n// './img/blockout/frame_049_delay-0.03s.png',\n// './img/blockout/frame_050_delay-0.03s.png',\n// './img/blockout/frame_001_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// './img/blockout/frame_003_delay-0.03s.png',\n// './img/blockout/frame_004_delay-0.03s.png',\n// './img/blockout/frame_005_delay-0.03s.png',\n// './img/blockout/frame_006_delay-0.03s.png',\n// './img/blockout/frame_007_delay-0.03s.png',\n// './img/blockout/frame_008_delay-0.03s.png',\n// './img/blockout/frame_009_delay-0.03s.png',\n// './img/blockout/frame_010_delay-0.03s.png',\n// './img/blockout/frame_001_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// './img/blockout/frame_003_delay-0.03s.png',\n// './img/blockout/frame_004_delay-0.03s.png',\n// './img/blockout/frame_005_delay-0.03s.png',\n// './img/blockout/frame_006_delay-0.03s.png',\n// './img/blockout/frame_007_delay-0.03s.png',\n// './img/blockout/frame_008_delay-0.03s.png',\n// './img/blockout/frame_009_delay-0.03s.png',\n// './img/blockout/frame_010_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// './img/blockout/frame_002_delay-0.03s.png',\n// ];\n// let index = 0;\n\n// function changeImage() {\n//   document.getElementById('image').src = images[index];\n//   index++;\n//   if (index === images.length) {\n//     index = 0;\n//   }\n// }\n\n// setInterval(changeImage, 1000); // change image every 1 second\n\nconst canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\n\n//buttons\nconst spawnBtnPlayer = document.getElementById(\"spawn-btn-player\");\nconst spawnBtnAI = document.getElementById(\"spawn-btn-ai\");\nlet playerOne;\nlet playerTwo;\nlet board;\nvar rambo;\n\n// function reset(){\n//   playerOne = undefined\n//   playerTwo = undefined\n//   board = undefined\n// }\n\nfunction localAnimate(player1, player2, board) {\n  window.requestAnimationFrame(() => {\n    c.clearRect(0, 0, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldX, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldY);\n    board.draw();\n    if (player1 && player2) {\n      if (player1.alive && !player2.victory) {\n        player1.draw();\n      } else {\n        c.font = \"200px Georgia\";\n        c.fillStyle = \"Orange\";\n        c.fillText(\"Blue Wins!\", canvas.width / 4, canvas.height / 2);\n        spawnBtnPlayer.style.display = \"block\"; // show the spawn button\n        return; // stop the animation\n      }\n\n      if (player2.alive && !player1.victory) {\n        player2.draw();\n      } else {\n        c.font = \"200px Georgia\";\n        c.fillStyle = \"Orange\";\n        c.fillText(\"Red Wins!\", canvas.width / 4, canvas.height / 2);\n        spawnBtnPlayer.style.display = \"block\"; // show the spawn button\n        return; // stop the animation\n      }\n    }\n\n    localAnimate(player1, player2, board);\n  });\n}\nfunction startPlayerGame() {\n  // debugger\n  spawnBtnPlayer.style.display = \"none\";\n  board = undefined;\n  playerOne = undefined;\n  playerTwo = undefined;\n  board = new _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n  playerOne = new _player_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldX + _tile_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].size * 1.5, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldY + _tile_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].size * 1.5);\n  playerTwo = new _playertwo_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mapWidth + _tile_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].size * 1.5, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mapHeight + _tile_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].size / 2);\n  playerOne.currentPlace.occupied = true;\n  playerTwo.currentPlace.occupied = true;\n  console.log(playerOne, playerTwo);\n  localAnimate(playerOne, playerTwo, board);\n}\nspawnBtnPlayer.addEventListener(\"click\", () => {\n  startPlayerGame();\n});\n\n// const board = new Board();\n// Board.map.forEach((ele) => console.log(ele));\n// // const player = new Player(375, 175)\n// console.log(Board.gameFieldX);\n// console.log(Board.gameFieldY);\n\n// var player;\n// var player2;\n\n// add event listener for the button click\n// spawnBtn.addEventListener(\"click\", () => {\n//   // create a new player and add it to the canvas\n//   player = new Player(Board.gameFieldX + Tile.size * 1.5,\n//     Board.gameFieldY + Tile.size * 1.5);\n//   player2 = new Playertwo(Board.mapWidth + (Tile.size * 1.5), Board.mapHeight + (Tile.size / 2));\n//   player.currentPlace.occupied = true;\n//   player2.currentPlace.occupied = true;\n//   spawnBtn.style.display = \"none\";\n\n//   localAnimate();\n// });\n\n// function tilePostion(row, col) {\n//   let x = Board.map[row][col].row\n//   let y = Board.map[row][col].col\n\n// // startX + tile.col * tile.size, startY + tile.row * tile.size;\n// }\n// const player = new Player(\n//   Board.gameFieldX + Tile.size * 1.5,\n//   Board.gameFieldY + Tile.size * 1.5\n// );\n// const player2 = new Playertwo(Board.mapWidth + (Tile.size * 1.5), Board.mapHeight + (Tile.size / 2));\n// const rambo = new AI(Board.playFieldWidth/2, Board.playFieldHeight/2)\n\n// rambo.currentPlace.occupied = true\n\n// function localAnimate() {\n//   window.requestAnimationFrame(localAnimate);\n//   c.clearRect(0, 0, Board.gameFieldX, Board.gameFieldY);\n//   board.draw();\n//   if (player && player2) {\n//     if (player.alive && !player2.victory) {\n//       player.draw();\n//     } else {\n//       c.font = \"200px Georgia\";\n//       c.fillStyle = \"Orange\";\n//       c.fillText(\"Blue Wins!\", canvas.width / 4, canvas.height / 2);\n//       spawnBtn.style.display = \"block\"; // show the spawn button\n//       return; // stop the animation\n//     }\n//     if (player2.alive && !player.victory) {\n//       player2.draw();\n//     } else {\n//       c.font = \"200px Georgia\";\n//       c.fillStyle = \"Orange\";\n//       c.fillText(\"Red Wins!\", canvas.width / 4, canvas.height / 2);\n//       spawnBtn.style.display = \"block\"; // show the spawn button\n//       return; // stop the animation\n//     }\n//   }\n// }\n\n// function animate() {\n//   window.requestAnimationFrame(animate);\n//   c.clearRect(0, 0, Board.gameFieldX, Board.gameFieldY);\n//   // c.fillRect(0,0,100,100)\n//   board.draw();\n//   // if (rambo) {\n//   //   if (rambo.alive && (!player2.victory || !player.victory)) {\n//   //     rambo.draw(); \n//   //   } else {\n//   //     c.font = \"200px Georgia\";\n//   //     c.fillStyle = \"Orange\";\n//   //     c.fillText(\"Players Win!\", canvas.width / 4, canvas.height / 2);\n//   //   }\n//   //   rambo.makeMove();\n//   //   rambo.makeMove();\n//   //   rambo.break();\n//   // }\n//   if (player.alive && !player2.victory) {\n//     player.draw();\n//   } else {\n//     // if (rambo.victory) {\n//     //   c.font = \"200px Georgia\";\n//     //   c.fillStyle = \"Orange\";\n//     //   c.fillText(\"Rambo Wins!\", canvas.width / 4, canvas.height / 2);\n//     // }\n//     c.font = \"200px Georgia\";\n//     c.fillStyle = \"Orange\";\n//     c.fillText(\"Blue Wins!\", canvas.width / 4, canvas.height / 2);\n//   }\n//   if (player2.alive && !player.victory) {\n//     player2.draw();\n//   } else {\n//     // if (rambo.victory) {\n//     //   c.font = \"200px Georgia\";\n//     //   c.fillStyle = \"Orange\";\n//     //   c.fillText(\"Rambo Wins!\", canvas.width / 4, canvas.height / 2);\n//     // }\n//     c.font = \"200px Georgia\";\n//     c.fillStyle = \"Orange\";\n//     c.fillText(\"Red Wins!\", canvas.width / 4, canvas.height / 2);\n//   }\n// }\n\n// player.currentTile();\n// player.getPlayerTile();\n// player2.getPlayerTile();\n// console.log(player.currentPlace)\n\nconsole.log(_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mapWidth, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mapHeight, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldEndX, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldEndY);\n// animate();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n/* harmony import */ var _playertwo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./playertwo.js */ \"./src/scripts/playertwo.js\");\n\n\n\nconst canvas = document.getElementById('canvas');\nconst c = canvas.getContext('2d');\nclass Player {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.dx;\n    this.dy;\n    this.radius = 15;\n    this.row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    this.col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    this.currentPlace = this.getPlayerTile();\n    this.alive = true;\n    this.victory = false;\n    // this.row = this.currentTile[0]\n    // this.row = this.currentTile[1]\n\n    this.lastKey = '';\n    this.keys = {\n      w: {\n        pressed: false\n      },\n      a: {\n        pressed: false\n      },\n      s: {\n        pressed: false\n      },\n      d: {\n        pressed: false\n      }\n    };\n    window.addEventListener('keydown', _ref => {\n      let {\n        key\n      } = _ref;\n      // console.log(key)\n      // var nextTile = this.getAnyTileXY(this.x, this.y - 50);\n      var nowTile;\n      var nextTile;\n      switch (key) {\n        case 'w':\n          this.keys.w.pressed = true;\n          this.lastKey = 'w';\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x, this.y - 50);\n          // nextTile = this.getAnyTileXY(this.x, this.y - 50);\n          nowTile = this.getPlayerTile();\n          if (this.isTile(this.x, this.y - 50) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.y -= 50;\n            // console.log(nowTile)\n            // console.log(nextTile)\n          }\n\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case 'a':\n          this.keys.a.pressed = true;\n          this.lastKey = \"a\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x - 50, this.y);\n          if (this.isTile(this.x - 50, this.y) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.x -= 50;\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case 's':\n          this.keys.s.pressed = true;\n          this.lastKey = \"s\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x, this.y + 50);\n          if (this.isTile(this.x, this.y + 50) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.y += 50;\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case 'd':\n          this.keys.d.pressed = true;\n          this.lastKey = \"d\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x + 50, this.y);\n          if (this.isTile(this.x + 50, this.y) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.x += 50;\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case ' ':\n          switch (this.lastKey) {\n            case \"w\":\n              if (this.isTile(this.x, this.y - 50)) {\n                this.breakTile(this.x, this.y - 50);\n              }\n              break;\n            case \"a\":\n              if (this.isTile(this.x - 50, this.y)) {\n                this.breakTile(this.x - 50, this.y);\n              }\n              break;\n            case \"s\":\n              if (this.isTile(this.x, this.y + 50)) {\n                this.breakTile(this.x, this.y + 50);\n              }\n              break;\n            case \"d\":\n              if (this.isTile(this.x + 50, this.y)) {\n                this.breakTile(this.x + 50, this.y);\n              }\n              break;\n          }\n          break;\n      }\n      // console.log(keys.d.pressed)\n      // console.log(keys.s.pressed)\n    });\n  }\n\n  draw() {\n    c.beginPath();\n    c.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    c.fillStyle = 'red';\n    c.fill();\n    c.closePath();\n  }\n  currentTile() {\n    let row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    // console.log([row,col])\n    return [row, col];\n  }\n  getPlayerTile() {\n    let row = this.currentTile()[0];\n    let col = this.currentTile()[1];\n    // console.log([row, col])\n    // console.log(Board.map[row][col])\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTile(row, col) {\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTileXY(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n\n  // breakTiles\n\n  breakTile(x, y) {\n    let pos = this.xyConvert(x, y);\n    let row = pos[0];\n    let col = pos[1];\n    let tile = this.getAnyTile(row, col);\n    if (tile.health > 0) {\n      tile.health -= 1;\n      if (tile.health === 0) {\n        tile.visible = false;\n        if (tile.occupied) {\n          this.victory = true; // Checking if tile was occupied on last hit \n        }\n      }\n    }\n    // console.log(tile)\n  }\n\n  // Tile existence logic (use for boundary detection)\n\n  isTile(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    if (_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col] instanceof _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  xyConvert(x, y) {\n    let row = Math.floor((y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1);\n    return [row, col];\n  }\n\n  // Player dead logic\n\n  isDead() {\n    let tile = this.getPlayerTile();\n\n    // console.log(tile)\n    if (tile.health === 0) {\n      this.alive = false;\n    } else {\n      this.alive = true;\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/scripts/playertwo.js":
/*!**********************************!*\
  !*** ./src/scripts/playertwo.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n\n\nconst canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\nclass Playertwo {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.dx;\n    this.dy;\n    this.radius = 15;\n    this.row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    this.col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    this.currentPlace = this.getPlayerTile();\n    this.alive = true;\n    this.victory = false;\n    // this.row = this.currentTile[0]\n    // this.row = this.currentTile[1]\n\n    this.lastKey = \"\";\n    this.keys = {\n      ArrowUp: {\n        pressed: false\n      },\n      ArrowLeft: {\n        pressed: false\n      },\n      ArrowDown: {\n        pressed: false\n      },\n      ArrowRight: {\n        pressed: false\n      }\n    };\n    window.addEventListener(\"keydown\", _ref => {\n      let {\n        key\n      } = _ref;\n      // console.log(key);\n      var nowTile;\n      var nextTile;\n      switch (key) {\n        case \"ArrowUp\":\n          this.keys.ArrowUp.pressed = true;\n          this.lastKey = \"ArrowUp\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x, this.y - 50);\n          if (this.isTile(this.x, this.y - 50) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.y -= 50;\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case \"ArrowLeft\":\n          this.keys.ArrowLeft.pressed = true;\n          this.lastKey = \"ArrowLeft\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x - 50, this.y);\n          if (this.isTile(this.x - 50, this.y) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.x -= 50;\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case \"ArrowDown\":\n          this.keys.ArrowDown.pressed = true;\n          this.lastKey = \"ArrowDown\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x, this.y + 50);\n          if (this.isTile(this.x, this.y + 50) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.y += 50;\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case \"ArrowRight\":\n          this.keys.ArrowRight.pressed = true;\n          this.lastKey = \"ArrowRight\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x + 50, this.y);\n          if (this.isTile(this.x + 50, this.y) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.x += 50;\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case \"Enter\":\n          switch (this.lastKey) {\n            case \"ArrowUp\":\n              if (this.isTile(this.x, this.y - 50)) {\n                this.breakTile(this.x, this.y - 50);\n              }\n              break;\n            case \"ArrowLeft\":\n              if (this.isTile(this.x - 50, this.y)) {\n                this.breakTile(this.x - 50, this.y);\n              }\n              break;\n            case \"ArrowDown\":\n              if (this.isTile(this.x, this.y + 50)) {\n                this.breakTile(this.x, this.y + 50);\n              }\n              break;\n            case \"ArrowRight\":\n              if (this.isTile(this.x + 50, this.y)) {\n                this.breakTile(this.x + 50, this.y);\n              }\n              break;\n          }\n          console.log(\"hello\");\n          break;\n      }\n      // console.log(keys.d.pressed)\n      // console.log(keys.s.pressed)\n    });\n  }\n\n  draw() {\n    c.beginPath();\n    c.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    c.fillStyle = \"blue\";\n    c.fill();\n    c.closePath();\n  }\n  currentTile() {\n    let row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    // console.log([row, col]);\n    return [row, col];\n  }\n  getPlayerTile() {\n    let row = this.currentTile()[0];\n    let col = this.currentTile()[1];\n    // console.log([row, col]);\n    // console.log(Board.map[row][col]);\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTile(row, col) {\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTileXY(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n\n  // breakTiles\n\n  breakTile(x, y) {\n    let pos = this.xyConvert(x, y);\n    let row = pos[0];\n    let col = pos[1];\n    let tile = this.getAnyTile(row, col);\n    if (tile.health > 0) {\n      tile.health -= 1;\n      if (tile.health === 0) {\n        tile.visible = false;\n        if (tile.occupied) {\n          this.victory = true;\n        }\n      }\n    }\n    // console.log(tile);\n  }\n\n  // Tile existence logic (use for boundary detection)\n\n  isTile(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    if (_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col] instanceof _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  xyConvert(x, y) {\n    let row = Math.floor((y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1);\n    return [row, col];\n  }\n\n  // Player dead logic\n\n  isDead() {\n    let tile = this.getPlayerTile();\n\n    // console.log(tile);\n    if (tile.health === 0) {\n      this.alive = false;\n    } else {\n      this.alive = true;\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Playertwo);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/playertwo.js\n");

/***/ }),

/***/ "./src/scripts/tile.js":
/*!*****************************!*\
  !*** ./src/scripts/tile.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nclass Tile {\n  constructor(row, col) {\n    this.row = row;\n    this.col = col;\n    this.size = Tile.size;\n    this.health = 3;\n    this.visible = true;\n    this.occupied = false;\n  }\n}\n_defineProperty(Tile, \"size\", 50);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Tile);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy90aWxlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxJQUFJLENBQUM7RUFHVEMsV0FBV0EsQ0FBQ0MsR0FBRyxFQUFFQyxHQUFHLEVBQUU7SUFDcEIsSUFBSSxDQUFDRCxHQUFHLEdBQUdBLEdBQUc7SUFDZCxJQUFJLENBQUNDLEdBQUcsR0FBR0EsR0FBRztJQUNkLElBQUksQ0FBQ0MsSUFBSSxHQUFHSixJQUFJLENBQUNJLElBQUk7SUFDckIsSUFBSSxDQUFDQyxNQUFNLEdBQUcsQ0FBQztJQUNmLElBQUksQ0FBQ0MsT0FBTyxHQUFHLElBQUk7SUFDbkIsSUFBSSxDQUFDQyxRQUFRLEdBQUcsS0FBSztFQUN2QjtBQUNGO0FBQUNDLGVBQUEsQ0FYS1IsSUFBSSxVQUNNLEVBQUU7QUFZbEIsK0RBQWVBLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcGxlZWYvLi9zcmMvc2NyaXB0cy90aWxlLmpzPzBlYmQiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgVGlsZSB7XHJcbiAgc3RhdGljIHNpemUgPSA1MDtcclxuXHJcbiAgY29uc3RydWN0b3Iocm93LCBjb2wpIHtcclxuICAgIHRoaXMucm93ID0gcm93O1xyXG4gICAgdGhpcy5jb2wgPSBjb2w7XHJcbiAgICB0aGlzLnNpemUgPSBUaWxlLnNpemU7XHJcbiAgICB0aGlzLmhlYWx0aCA9IDM7XHJcbiAgICB0aGlzLnZpc2libGUgPSB0cnVlO1xyXG4gICAgdGhpcy5vY2N1cGllZCA9IGZhbHNlO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVGlsZTsiXSwibmFtZXMiOlsiVGlsZSIsImNvbnN0cnVjdG9yIiwicm93IiwiY29sIiwic2l6ZSIsImhlYWx0aCIsInZpc2libGUiLCJvY2N1cGllZCIsIl9kZWZpbmVQcm9wZXJ0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/tile.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;