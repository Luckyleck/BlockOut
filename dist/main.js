/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _scripts_game_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/game.js */ \"./src/scripts/game.js\");\n\n\n\n// Game will initialize when the HTML loads and event listeners will be set up\nconsole.log(\"Game initialized\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7O0FBQXNDO0FBQ0Y7O0FBRXBDO0FBQ0FFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGtCQUFrQixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3BsZWVmLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJvYXJkIGZyb20gXCIuL3NjcmlwdHMvYm9hcmQuanNcIlxyXG5pbXBvcnQgR2FtZSBmcm9tIFwiLi9zY3JpcHRzL2dhbWUuanNcIlxyXG5cclxuLy8gR2FtZSB3aWxsIGluaXRpYWxpemUgd2hlbiB0aGUgSFRNTCBsb2FkcyBhbmQgZXZlbnQgbGlzdGVuZXJzIHdpbGwgYmUgc2V0IHVwXHJcbmNvbnNvbGUubG9nKFwiR2FtZSBpbml0aWFsaXplZFwiKTsiXSwibmFtZXMiOlsiQm9hcmQiLCJHYW1lIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/ai.js":
/*!***************************!*\
  !*** ./src/scripts/ai.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n/* harmony import */ var _boundary_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boundary.js */ \"./src/scripts/boundary.js\");\n\n\n\nconst canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\nconst shovelRight = new Image();\nshovelRight.src = \"./images/shovels/Shovel_Yellow_Right.png\";\nconst shovelLeft = new Image();\nshovelLeft.src = \"./images/shovels/Shovel_Yellow_Left.png\";\nconst shovelDown = new Image();\nshovelDown.src = \"./images/shovels/Shovel_Yellow_Down.png\";\nclass AI {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.alive = true;\n    this.radius = 15;\n    this.row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    this.col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    this.victory = false;\n    this.currentPlace = this.getPlayerTile();\n    this.lastKey = \"\";\n    this.canMove = true;\n    this.canBreak = true;\n    this.breakCount = 0;\n    this.direction = \"left\";\n    this.image;\n  }\n  moveAndBreak() {\n    this.makeMove();\n    this.makeMove();\n    this.break();\n    this.makeMove();\n  }\n  makeMove() {\n    if (!this.canMove) return false;\n    const directions = [\"north\", \"south\", \"east\", \"west\"];\n    let direction = directions[Math.floor(Math.random() * directions.length)];\n    var nowTile;\n    var nextTile;\n    switch (direction) {\n      case \"north\":\n        // this.keys.ArrowUp.pressed = true;\n        this.lastKey = \"north\";\n        nowTile = this.getPlayerTile();\n        nextTile = this.getAnyTileXY(this.x, this.y - 50);\n        if (this.isTile(this.x, this.y - 50) && nextTile.occupied === false && nextTile.health > 0) {\n          nowTile.occupied = false;\n          nextTile.occupied = true;\n          this.y -= 50;\n          this.direction = \"up\";\n        }\n        if (this.alive && this.isDead()) {\n          this.alive = false;\n        }\n        break;\n      case \"west\":\n        // this.keys.ArrowLeft.pressed = true;\n        this.lastKey = \"west\";\n        nowTile = this.getPlayerTile();\n        nextTile = this.getAnyTileXY(this.x - 50, this.y);\n        if (this.isTile(this.x - 50, this.y) && nextTile.occupied === false && nextTile.health > 0) {\n          nowTile.occupied = false;\n          nextTile.occupied = true;\n          this.x -= 50;\n          this.direction = \"left\";\n        }\n        if (this.alive && this.isDead()) {\n          this.alive = false;\n        }\n        break;\n      case \"south\":\n        // this.keys.ArrowDown.pressed = true;\n        this.lastKey = \"south\";\n        nowTile = this.getPlayerTile();\n        nextTile = this.getAnyTileXY(this.x, this.y + 50);\n        if (this.isTile(this.x, this.y + 50) && nextTile.occupied === false && nextTile.health > 0) {\n          nowTile.occupied = false;\n          nextTile.occupied = true;\n          this.y += 50;\n          this.direction = \"down\";\n        }\n        if (this.alive && this.isDead()) {\n          this.alive = false;\n        }\n        break;\n      case \"east\":\n        // this.keys.ArrowRight.pressed = true;\n        this.lastKey = \"east\";\n        nowTile = this.getPlayerTile();\n        nextTile = this.getAnyTileXY(this.x + 50, this.y);\n        if (this.isTile(this.x + 50, this.y) && nextTile.occupied === false && nextTile.health > 0) {\n          nowTile.occupied = false;\n          nextTile.occupied = true;\n          this.x += 50;\n          this.direction = \"right\";\n        }\n        if (this.alive && this.isDead()) {\n          this.alive = false;\n        }\n        break;\n    }\n    // throttle\n    this.canMove = false;\n    setTimeout(() => this.canMove = true, 200);\n  }\n  break() {\n    if (!this.canBreak) return false;\n    switch (this.lastKey) {\n      case \"north\":\n        if (this.isTile(this.x, this.y - 50) && this.getAnyTileXY(this.x, this.y - 50).health > 0) {\n          this.breakTile(this.x, this.y - 50);\n        }\n        break;\n      case \"west\":\n        if (this.isTile(this.x - 50, this.y) && this.getAnyTileXY(this.x - 50, this.y).health > 0) {\n          this.breakTile(this.x - 50, this.y);\n        }\n        break;\n      case \"south\":\n        if (this.isTile(this.x, this.y + 50) && this.getAnyTileXY(this.x, this.y + 50).health > 0) {\n          this.breakTile(this.x, this.y + 50);\n        }\n        break;\n      case \"east\":\n        if (this.isTile(this.x + 50, this.y) && this.getAnyTileXY(this.x + 50, this.y).health > 0) {\n          this.breakTile(this.x + 50, this.y);\n        }\n        break;\n    }\n    this.canBreak = false;\n    setTimeout(() => this.canBreak = true, 200);\n  }\n  draw() {\n    this.pickImage();\n    c.drawImage(this.image, this.x - 10, this.y - 20, 40, 40);\n  }\n  currentTile() {\n    let row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    return [row, col];\n  }\n  getPlayerTile() {\n    let row = this.currentTile()[0];\n    let col = this.currentTile()[1];\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTile(row, col) {\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTileXY(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n\n  // breakTiles\n\n  breakTile(x, y) {\n    let pos = this.xyConvert(x, y);\n    let row = pos[0];\n    let col = pos[1];\n    let tile = this.getAnyTile(row, col);\n    if (tile.health > 0) {\n      tile.health -= 1;\n      if (tile.health === 0) {\n        tile.visible = false;\n        if (tile.occupied) {\n          this.victory = true;\n        }\n      }\n    }\n  }\n\n  // Tile existence logic (use for boundary detection)\n\n  isTile(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    if (_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col] instanceof _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  xyConvert(x, y) {\n    let row = Math.floor((y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1);\n    return [row, col];\n  }\n\n  // Player dead logic\n\n  isDead() {\n    let tile = this.getPlayerTile();\n\n    // console.log(tile);\n    if (tile.health === 0) {\n      this.alive = false;\n    } else {\n      this.alive = true;\n    }\n  }\n  reset() {\n    this.x = undefined;\n    this.y = undefined;\n    this.dx = undefined;\n    this.dy = undefined;\n    this.radius = undefined;\n    this.row = undefined;\n    this.col = undefined;\n    this.currentPlace = undefined;\n    this.alive = undefined;\n    this.victory = undefined;\n    this.lastkey = undefined;\n  }\n  pickImage() {\n    if (this.direction === \"right\") {\n      this.image = shovelRight;\n    } else if (this.direction === \"left\") {\n      this.image = shovelLeft;\n    } else if (this.direction === \"down\") {\n      this.image = shovelDown;\n    } else {\n      this.image = shovelLeft;\n    }\n  }\n  checkBoundary() {\n    const currentTile = this.getPlayerTile();\n    if (currentTile instanceof _boundary_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n      this.alive = false;\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (AI);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/ai.js\n");

/***/ }),

/***/ "./src/scripts/board.js":
/*!******************************!*\
  !*** ./src/scripts/board.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n/* harmony import */ var _boundary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./boundary.js */ \"./src/scripts/boundary.js\");\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./player.js */ \"./src/scripts/player.js\");\n\n\n\n// import grass from './img/grass.png'\n\nconst canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\nconst grassFull = new Image();\ngrassFull.src = \"./images/tiles/grass.png\";\nconst stone = new Image();\nstone.src = \"./images/tiles/stone_pink.png\";\nconst dirtLight = new Image();\ndirtLight.src = \"./images/tiles/dirt_light.png\";\nconst dirtDark = new Image();\ndirtDark.src = \"./images/tiles/dirt_dark.png\";\n\n// c.fillRect(20, 20, 20, 20)\n\nclass Board {\n  static mapn  static timer = 0;\n  static intervalId = null;\n  static shrinkCounter = 0;\n  static gameover = false;\n  static canvasCenterX = canvas.width / 2;\n  static canvasCenterY = canvas.height / 2;\n\n  // Map total Width and Height\n  static mapWidth = Board.map[0].length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size;\n  static mapHeight = Board.map.length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size;\n\n  // Map Start x and y\n  static gameFieldX = Board.canvasCenterX / 2 / 2 + 60; //300\n  static gameFieldY = Board.canvasCenterY / 4; //100\n\n  // Map End x and y\n  static gameFieldEndX = Board.map[0].length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 3;\n  static gameFieldEndY = Board.map.length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2;\n\n  // Playfield Width and Height\n  static playFieldWidth = Board.mapWidth - _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2;\n  static playFieldHeight = Board.mapHeight - _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2;\n\n  // Playfield Start x and y\n  static playFieldStartX = Board.gameFieldX + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size; // 350;\n  static playFieldStartY = Board.gameFieldY + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size; // 150\n\n  constructor() {\n    // this.gameOver = false;\n    for (let i = 0; i < Board.map.length; i++) {\n      for (let j = 0; j < Board.map[i].length; j++) {\n        if (Board.map[i][j] === \" \") {\n          Board.map[i][j] = new _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](i,\n          // row\n          j // col\n          );\n        } else {\n          Board.map[i][j] = new _boundary_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](i,\n          // row\n          j // col\n          );\n        }\n      }\n    }\n  }\n\n  draw() {\n    const StartX = Board.gameFieldX;\n    const StartY = Board.gameFieldY;\n    Board.map.forEach(row => {\n      // console.log(row)\n      row.forEach(tile => {\n        // Col first, then row\n        if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && tile.health === 3) {\n          c.shadowBlur = 10;\n          c.shadowColor = \"black\";\n          c.drawImage(grassFull, StartX + tile.col * tile.size, StartY + tile.row * tile.size, tile.size, tile.size);\n        } else if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && tile.health === 2) {\n          c.shadowBlur = 10;\n          c.shadowColor = \"black\";\n          c.drawImage(dirtLight, StartX + tile.col * tile.size, StartY + tile.row * tile.size, tile.size, tile.size);\n        } else if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && tile.health === 1) {\n          c.shadowBlur = 10;\n          c.shadowColor = \"black\";\n          c.drawImage(dirtDark, StartX + tile.col * tile.size, StartY + tile.row * tile.size, tile.size, tile.size);\n        } else if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && tile.health === 0) {\n          c.globalAlpha = 0.0;\n          c.fillStyle = \"#ffebcd\"; // color of background\n          c.fillRect(StartX + tile.col * tile.size, StartY + tile.row * tile.size, tile.size, tile.size);\n          c.lineWidth = 2;\n          c.strokeStyle = \"black\";\n          c.strokeRect(StartX + tile.col * tile.size, StartY + tile.row * tile.size, tile.size, tile.size);\n          c.globalAlpha = 1;\n        } else if (tile instanceof _boundary_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n          c.drawImage(stone, StartX + tile.col * tile.size, StartY + tile.row * tile.size, tile.size, tile.size);\n        }\n      });\n    });\n\n    // Draw red dot at game field (x, y)\n    // c.fillStyle = \"red\";\n    // c.beginPath();\n    // c.arc(Board.gameFieldX, Board.gameFieldY, 5, 0, Math.PI * 2);\n    // c.fill();\n\n    // // Draw red dot at play field (x, y)\n    // const circleplayFieldStartX = Board.playFieldStartX;\n    // const circleplayFieldStartY = Board.playFieldStartY;\n    // c.fillStyle = \"blue\";\n    // c.beginPath();\n    // c.arc(circleplayFieldStartX, circleplayFieldStartY, 5, 0, Math.PI * 2);\n    // c.fill();\n  }\n\n  static shrinkPlayField() {\n    Board.shrinkCounter++;\n    if (Board.shrinkCounter >= 6) {\n      Board.gameover = true;\n      return;\n    }\n\n    // Remove top row\n    Board.map.shift();\n\n    // Remove bottom row\n    Board.map.pop();\n\n    // Remove leftmost column for each row\n    for (let row of Board.map) {\n      row.shift();\n    }\n\n    // Remove rightmost column for each row\n    for (let row of Board.map) {\n      row.pop();\n    }\n\n    // Replace the top row with new Boundary instances\n    for (let col = 0; col < Board.map[0].length; col++) {\n      Board.map[0][col] = new _boundary_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](0, col);\n    }\n\n    // Replace the bottom row with new Boundary instances\n    let lastRow = Board.map.length - 1;\n    for (let col = 0; col < Board.map[lastRow].length; col++) {\n      Board.map[lastRow][col] = new _boundary_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](lastRow, col);\n    }\n\n    // Replace the leftmost column with new Boundary instances\n    for (let row = 0; row < Board.map.length; row++) {\n      Board.map[row][0] = new _boundary_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](row, 0);\n    }\n\n    // Replace the rightmost column with new Boundary instances\n    let lastCol = Board.map[0].length - 1;\n    for (let row = 0; row < Board.map.length; row++) {\n      Board.map[row][lastCol] = new _boundary_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](row, lastCol);\n    }\n\n    // We must update the rows and cols of the Tile instances\n    for (let i = 0; i < Board.map.length; i++) {\n      for (let j = 0; j < Board.map[i].length; j++) {\n        const tile = Board.map[i][j];\n        if (tile instanceof _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n          tile.row = i;\n          tile.col = j;\n        }\n      }\n    }\n    Board.mapWidth = Board.map[0].length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size;\n    Board.mapHeight = Board.map.length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size;\n    Board.gameFieldX += 50;\n    Board.gameFieldY += 50;\n    Board.gameFieldEndX -= 50;\n    Board.gamefieldEndY -= 50;\n    Board.playFieldStartX += 50;\n    Board.playFieldStartY += 50;\n    console.log(Board.gameover);\n  }\n  static startTimer() {\n    if (!Board.intervalId) {\n      Board.intervalId = setInterval(() => {\n        Board.timer += 1;\n        if (Board.timer % 5 === 0) {\n          Board.shrinkPlayField();\n        }\n      }, 1000);\n    }\n  }\n  static stopTimer() {\n    if (Board.intervalId) {\n      clearInterval(Board.intervalId);\n      Board.intervalId = null;\n    }\n  }\n  reset() {\n    Board.mapn    Board.timer = 0;\n    Board.shrinkCounter = 0;\n    Board.gameover = false;\n    Board.canvasCenterX = canvas.width / 2;\n    Board.canvasCenterY = canvas.height / 2;\n\n    // Map total Width and Height\n    Board.mapWidth = Board.map[0].length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size;\n    Board.mapHeight = Board.map.length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size;\n\n    // Map Start x and y\n    Board.gameFieldX = Board.canvasCenterX / 2 / 2 + 60; //300\n    Board.gameFieldY = Board.canvasCenterY / 4; //100\n\n    // Map End x and y\n    Board.gameFieldEndX = Board.map[0].length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 3;\n    Board.gameFieldEndY = Board.map.length * _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2;\n\n    // Playfield Width and Height\n    Board.playFieldWidth = Board.mapWidth - _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2;\n    Board.playFieldHeight = Board.mapHeight - _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size * 2;\n\n    // Playfield Start x and y\n    Board.playFieldStartX = Board.gameFieldX + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size; // 350;\n    Board.playFieldStartY = Board.gameFieldY + _tile_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].size; // 150\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Board);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/board.js\n");

/***/ }),

/***/ "./src/scripts/boundary.js":
/*!*********************************!*\
  !*** ./src/scripts/boundary.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Boundary {\n  static size = 50;\n  constructor(row, col) {\n    this.row = row;\n    this.col = col;\n    this.size = Boundary.size;\n    this.occupied = false;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Boundary);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9ib3VuZGFyeS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsUUFBUSxDQUFDO0VBQ1gsT0FBT0MsSUFBSSxHQUFHLEVBQUU7RUFFaEJDLFdBQVdBLENBQUNDLEdBQUcsRUFBQ0MsR0FBRyxFQUFFO0lBQ2pCLElBQUksQ0FBQ0QsR0FBRyxHQUFHQSxHQUFHO0lBQ2QsSUFBSSxDQUFDQyxHQUFHLEdBQUdBLEdBQUc7SUFDZCxJQUFJLENBQUNILElBQUksR0FBR0QsUUFBUSxDQUFDQyxJQUFJO0lBQ3pCLElBQUksQ0FBQ0ksUUFBUSxHQUFHLEtBQUs7RUFDekI7QUFDSjtBQUVBLCtEQUFlTCxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3BsZWVmLy4vc3JjL3NjcmlwdHMvYm91bmRhcnkuanM/MWYwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBCb3VuZGFyeSB7XHJcbiAgICBzdGF0aWMgc2l6ZSA9IDUwO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHJvdyxjb2wpIHtcclxuICAgICAgICB0aGlzLnJvdyA9IHJvdzsgXHJcbiAgICAgICAgdGhpcy5jb2wgPSBjb2xcclxuICAgICAgICB0aGlzLnNpemUgPSBCb3VuZGFyeS5zaXplO1xyXG4gICAgICAgIHRoaXMub2NjdXBpZWQgPSBmYWxzZTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQm91bmRhcnkiXSwibmFtZXMiOlsiQm91bmRhcnkiLCJzaXplIiwiY29uc3RydWN0b3IiLCJyb3ciLCJjb2wiLCJvY2N1cGllZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/boundary.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player.js */ \"./src/scripts/player.js\");\n/* harmony import */ var _playertwo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./playertwo.js */ \"./src/scripts/playertwo.js\");\n/* harmony import */ var _ai_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ai.js */ \"./src/scripts/ai.js\");\n\n\n\n\nconst canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\n\n//buttons\nconst spawnBtnPlayer = document.getElementById(\"spawn-btn-player\");\nconst spawnBtnAI = document.getElementById(\"spawn-btn-ai\");\nconst playAgain = document.getElementById(\"play-again\");\nconst winMessage = document.getElementById(\"win-message\");\nconst playerOneSpawnX = 285; // Board.gameFieldX + (Tile.size * 1.5), \nconst playerOneSpawnY = 175; // Board.gameFieldY + (Tile.size * 1.5)\nconst playerTwoSpawnX = 935; // Board.mapWidth + (Tile.size * 2.7)\nconst playerTwoSpawnY = 675; // Board.mapHeight + (Tile.size / 2)\nconst aiSpawnX = 825; // Board.mapWidth + Tile.size / 2\nconst aiSpawnY = 625; // Board.mapHeight - Tile.size / 2\n\nplayAgain.style.display = \"none\";\nwinMessage.style.display = \"none\";\nspawnBtnPlayer.addEventListener(\"click\", () => {\n  startPlayerGame();\n  clearButtons();\n});\nspawnBtnAI.addEventListener(\"click\", () => {\n  startAiGame();\n  clearButtons();\n});\nplayAgain.addEventListener('click', () => {\n  playerTwo instanceof _ai_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"] ? startAiGame() : startPlayerGame();\n  clearButtons();\n});\nlet playerOne;\nlet playerTwo;\nlet board;\nfunction clearButtons() {\n  [playAgain, winMessage, spawnBtnPlayer, spawnBtnAI].forEach(el => el.style.display = \"none\");\n}\nfunction endGame(winner) {\n  if (winner == 'draw') {\n    winMessage.innerText = `It's a draw!`;\n  } else {\n    winMessage.innerText = `${winner} wins!`;\n  }\n  winMessage.style.display = \"block\";\n  spawnBtnPlayer.style.display = \"block\";\n  spawnBtnAI.style.display = \"block\";\n  playAgain.style.display = \"block\";\n  _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].stopTimer();\n}\nfunction localAnimate(player1, player2, board) {\n  window.requestAnimationFrame(() => {\n    c.clearRect(0, 0, canvas.width, canvas.height);\n    if (_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameover && player1.alive && player2.alive) {\n      board.draw();\n      endGame('draw');\n      return;\n    }\n    board.draw();\n    player1.checkBoundary();\n    player2.checkBoundary();\n    player1.alive && player1.draw();\n    player2.alive && player2.draw();\n    if (!player1.alive && !player2.alive) {\n      endGame('draw');\n      return;\n    }\n    if (!player1.alive) {\n      player2.draw();\n      endGame('Blue');\n      return;\n    }\n    if (!player2.alive) {\n      player1.draw();\n      endGame('Red');\n      return;\n    }\n    localAnimate(player1, player2, board);\n  });\n}\nfunction startPlayerGame() {\n  board && board.reset();\n  playerOne && playerOne.reset();\n  playerTwo && playerTwo.reset();\n  board = undefined;\n  playerOne = undefined;\n  playerTwo = undefined;\n  board = new _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n  playerOne = new _player_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](playerOneSpawnX, playerOneSpawnY);\n  playerTwo = new _playertwo_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](playerTwoSpawnX, playerTwoSpawnY);\n  _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].startTimer();\n  playerOne.currentPlace.occupied = true;\n  playerTwo.currentPlace.occupied = true;\n  console.log(playerOne, playerTwo);\n  localAnimate(playerOne, playerTwo, board);\n}\nfunction aiAnimate(player1, ai, board) {\n  window.requestAnimationFrame(() => {\n    c.clearRect(0, 0, canvas.width, canvas.height);\n    if (_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameover && player1.alive && ai.alive) {\n      board.draw();\n      endGame('draw');\n    }\n    board.draw();\n    player1.checkBoundary();\n    ai.checkBoundary();\n    player1.alive && player1.draw();\n    ai.alive && ai.draw();\n    ai.makeMove();\n    ai.makeMove();\n    ai.break();\n    if (!player1.alive && !ai.alive) {\n      endGame('draw');\n      return;\n    }\n    if (!player1.alive) {\n      ai.draw();\n      endGame('Rambo');\n      return;\n    }\n    if (!ai.alive) {\n      player1.draw();\n      endGame('Player');\n      return;\n    }\n    aiAnimate(player1, ai, board);\n  });\n}\nfunction startAiGame() {\n  board && board.reset();\n  playerOne && playerOne.reset();\n  playerTwo && playerTwo.reset();\n  board = undefined;\n  playerOne = undefined;\n  playerTwo = undefined;\n  board = new _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n  playerOne = new _player_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](playerOneSpawnX, playerOneSpawnY);\n  playerTwo = new _ai_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](aiSpawnX, aiSpawnY);\n  _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].startTimer();\n  playerOne.currentPlace.occupied = true;\n  playerTwo.currentPlace.occupied = true;\n  aiAnimate(playerOne, playerTwo, board);\n}\nconsole.log(_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mapWidth, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mapHeight, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldEndX, _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gameFieldEndY);\n\n// Add this at the end of game.js\nfunction init() {\n  // Set up button event listeners\n  spawnBtnPlayer.addEventListener(\"click\", () => {\n    startPlayerGame();\n    clearButtons();\n  });\n  spawnBtnAI.addEventListener(\"click\", () => {\n    startAiGame();\n    clearButtons();\n  });\n  playAgain.addEventListener('click', () => {\n    playerTwo instanceof _ai_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"] ? startAiGame() : startPlayerGame();\n    clearButtons();\n  });\n\n  // Hide buttons that should start hidden\n  playAgain.style.display = \"none\";\n  winMessage.style.display = \"none\";\n}\n\n// Export the init function\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  init\n});\n\n// if (!board.gameover) {\n//   board.draw();\n// }\n\n// if (player1 && ai) {\n//   if (player1.alive && !ai.victory) {\n//     player1.checkBoundary();\n//     ai.checkBoundary();\n//     player1.draw();\n//   } else {\n//     endGame(\"Rambo\")\n//     return;\n//   }\n//   if (ai.alive && !player1.victory) {\n//     player1.checkBoundary();\n//     ai.checkBoundary();\n//     ai.draw();\n//     ai.makeMove();\n//     ai.makeMove();\n//     ai.break();\n//     // ai.makeMove();\n//   } else {\n//     endGame(\"Player\")\n//     return; //\n//   }\n// }\n\n// player1.checkBoundary() && player1.alive && player1.draw();\n// player2.checkBoundary() && player2.alive && player2.draw();\n\n// if (!player1.alive) {\n//   endGame('Blue');\n//   return;\n// }\n\n// if (!player2.alive) {\n//   endGame('Red');\n//   return;\n// }\n\n// if (player1 && player2)\n// if (player1.alive && !player2.victory) {\n//   player1.checkBoundary();\n//   player2.checkBoundary();\n//   player1.draw();\n// } else {\n//   endGame(\"Blue\")\n//   return; // stop the animation\n// }\n// if (player2.alive && !player1.victory) {\n//   player1.checkBoundary();\n//   player2.checkBoundary();\n//   player2.draw();\n// } else {\n//   endGame(\"Red\")\n//   return; // stop the animation\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n/* harmony import */ var _boundary_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boundary.js */ \"./src/scripts/boundary.js\");\n\n\n\nconst canvas = document.getElementById('canvas');\nconst c = canvas.getContext('2d');\nconst shovelRight = new Image();\nshovelRight.src = './images/shovels/Shovel_Red_Right.png';\nconst shovelLeft = new Image();\nshovelLeft.src = \"./images/shovels/Shovel_Red_Left.png\";\nconst shovelDown = new Image();\nshovelDown.src = \"./images/shovels/Shovel_Red_Down.png\";\nclass Player {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.dx;\n    this.dy;\n    this.radius = 15;\n    this.row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    this.col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    this.currentPlace = this.getPlayerTile();\n    this.alive = true;\n    this.victory = false;\n    this.direction = 'right';\n    this.image;\n    this.lastKey = '';\n    window.addEventListener('keydown', _ref => {\n      let {\n        key\n      } = _ref;\n      var nowTile;\n      var nextTile;\n      switch (key) {\n        case 'w':\n          this.lastKey = 'w';\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x, this.y - 50);\n          nowTile = this.getPlayerTile();\n          if (this.isTile(this.x, this.y - 50) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.y -= 50;\n            this.direction = 'up';\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case 'a':\n          this.lastKey = \"a\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x - 50, this.y);\n          if (this.isTile(this.x - 50, this.y) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.x -= 50;\n            this.direction = \"left\";\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case 's':\n          this.lastKey = \"s\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x, this.y + 50);\n          if (this.isTile(this.x, this.y + 50) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.y += 50;\n            this.direction = \"down\";\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case 'd':\n          this.lastKey = \"d\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x + 50, this.y);\n          if (this.isTile(this.x + 50, this.y) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.x += 50;\n            this.direction = \"right\";\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case ' ':\n          switch (this.lastKey) {\n            case \"w\":\n              if (this.isTile(this.x, this.y - 50)) {\n                this.breakTile(this.x, this.y - 50);\n              }\n              break;\n            case \"a\":\n              if (this.isTile(this.x - 50, this.y)) {\n                this.breakTile(this.x - 50, this.y);\n              }\n              break;\n            case \"s\":\n              if (this.isTile(this.x, this.y + 50)) {\n                this.breakTile(this.x, this.y + 50);\n              }\n              break;\n            case \"d\":\n              if (this.isTile(this.x + 50, this.y)) {\n                this.breakTile(this.x + 50, this.y);\n              }\n              break;\n          }\n          break;\n      }\n    });\n  }\n  draw() {\n    this.pickImage();\n    c.drawImage(this.image, this.x - 20, this.y - 20, 40, 40);\n  }\n  currentTile() {\n    let row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    // console.log([row,col])\n    return [row, col];\n  }\n  getPlayerTile() {\n    let row = this.currentTile()[0];\n    let col = this.currentTile()[1];\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]?.map[row][col];\n  }\n  getAnyTile(row, col) {\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTileXY(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n\n  // breakTiles\n\n  breakTile(x, y) {\n    let pos = this.xyConvert(x, y);\n    let row = pos[0];\n    let col = pos[1];\n    let tile = this.getAnyTile(row, col);\n    if (tile.health > 0) {\n      tile.health -= 1;\n      if (tile.health === 0) {\n        tile.visible = false;\n        if (tile.occupied) {\n          this.victory = true; // Checking if tile was occupied on last hit \n        }\n      }\n    }\n    // console.log(tile)\n  }\n\n  // Tile existence logic (use for boundary detection)\n\n  isTile(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    if (_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col] instanceof _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  xyConvert(x, y) {\n    let row = Math.floor((y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1);\n    return [row, col];\n  }\n  isDead() {\n    let tile = this.getPlayerTile();\n    if (tile.health === 0) {\n      this.alive = false;\n    } else {\n      this.alive = true;\n    }\n  }\n  reset() {\n    this.x = undefined;\n    this.y = undefined;\n    this.dx = undefined;\n    this.dy = undefined;\n    this.radius = undefined;\n    this.row = undefined;\n    this.col = undefined;\n    this.currentPlace = undefined;\n    this.alive = undefined;\n    this.victory = undefined;\n    this.lastkey = undefined;\n  }\n  pickImage() {\n    if (this.direction === 'right') {\n      this.image = shovelRight;\n    } else if (this.direction === 'left') {\n      this.image = shovelLeft;\n    } else if (this.direction === 'down') {\n      this.image = shovelDown;\n    } else {\n      this.image = shovelRight;\n    }\n  }\n  checkBoundary() {\n    const currentTile = this.getPlayerTile();\n    if (currentTile instanceof _boundary_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n      this.alive = false;\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/scripts/playertwo.js":
/*!**********************************!*\
  !*** ./src/scripts/playertwo.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tile.js */ \"./src/scripts/tile.js\");\n/* harmony import */ var _boundary_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boundary.js */ \"./src/scripts/boundary.js\");\n\n\n\nconst canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\nconst shovelRight = new Image();\nshovelRight.src = \"./images/shovels/Shovel_Blue_Right.png\";\nconst shovelLeft = new Image();\nshovelLeft.src = \"./images/shovels/Shovel_Blue_Left.png\";\nconst shovelDown = new Image();\nshovelDown.src = \"./images/shovels/Shovel_Blue_Down.png\";\nclass Playertwo {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.dx;\n    this.dy;\n    this.radius = 15;\n    this.row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    this.col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    this.currentPlace = this.getPlayerTile();\n    this.alive = true;\n    this.victory = false;\n    this.direction = 'left';\n    this.image;\n    this.lastKey = \"\";\n    window.addEventListener(\"keydown\", _ref => {\n      let {\n        key\n      } = _ref;\n      // console.log(key);\n      var nowTile;\n      var nextTile;\n      switch (key) {\n        case \"ArrowUp\":\n          this.lastKey = \"ArrowUp\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x, this.y - 50);\n          if (this.isTile(this.x, this.y - 50) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.y -= 50;\n            this.direction = \"up\";\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case \"ArrowLeft\":\n          this.lastKey = \"ArrowLeft\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x - 50, this.y);\n          if (this.isTile(this.x - 50, this.y) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.x -= 50;\n            this.direction = \"left\";\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case \"ArrowDown\":\n          this.lastKey = \"ArrowDown\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x, this.y + 50);\n          if (this.isTile(this.x, this.y + 50) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.y += 50;\n            this.direction = \"down\";\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case \"ArrowRight\":\n          this.lastKey = \"ArrowRight\";\n          nowTile = this.getPlayerTile();\n          nextTile = this.getAnyTileXY(this.x + 50, this.y);\n          if (this.isTile(this.x + 50, this.y) && nextTile.occupied === false) {\n            nowTile.occupied = false;\n            nextTile.occupied = true;\n            this.direction = \"right\";\n            this.x += 50;\n          }\n          if (this.alive && this.isDead()) {\n            this.alive = false;\n          }\n          break;\n        case \"Enter\":\n          switch (this.lastKey) {\n            case \"ArrowUp\":\n              if (this.isTile(this.x, this.y - 50)) {\n                this.breakTile(this.x, this.y - 50);\n              }\n              break;\n            case \"ArrowLeft\":\n              if (this.isTile(this.x - 50, this.y)) {\n                this.breakTile(this.x - 50, this.y);\n              }\n              break;\n            case \"ArrowDown\":\n              if (this.isTile(this.x, this.y + 50)) {\n                this.breakTile(this.x, this.y + 50);\n              }\n              break;\n            case \"ArrowRight\":\n              if (this.isTile(this.x + 50, this.y)) {\n                this.breakTile(this.x + 50, this.y);\n              }\n              break;\n          }\n          console.log(\"hello\");\n          break;\n      }\n    });\n  }\n  draw() {\n    this.pickImage();\n    c.drawImage(this.image, this.x - 20, this.y - 20, 40, 40);\n  }\n  currentTile() {\n    let row = Math.floor((this.y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((this.x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // col is x\n    // console.log([row, col]);\n    return [row, col];\n  }\n  getPlayerTile() {\n    let row = this.currentTile()[0];\n    let col = this.currentTile()[1];\n    // console.log([row, col]);\n    // console.log(Board.map[row][col]);\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTile(row, col) {\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  getAnyTileXY(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    return _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col];\n  }\n  breakTile(x, y) {\n    let pos = this.xyConvert(x, y);\n    let row = pos[0];\n    let col = pos[1];\n    let tile = this.getAnyTile(row, col);\n    if (tile.health > 0) {\n      tile.health -= 1;\n      if (tile.health === 0) {\n        tile.visible = false;\n        if (tile.occupied) {\n          this.victory = true;\n        }\n      }\n    }\n  }\n\n  // Tile existence logic (use for boundary detection)\n\n  isTile(x, y) {\n    let tile = this.xyConvert(x, y);\n    let row = tile[0];\n    let col = tile[1];\n    if (_board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map[row][col] instanceof _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  xyConvert(x, y) {\n    let row = Math.floor((y - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartY) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1); // row is y\n    let col = Math.floor((x - _board_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].playFieldStartX) / _tile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].size + 1);\n    return [row, col];\n  }\n\n  // Player dead logic\n\n  isDead() {\n    let tile = this.getPlayerTile();\n\n    // console.log(tile);\n    if (tile.health === 0) {\n      this.alive = false;\n    } else {\n      this.alive = true;\n    }\n  }\n  reset() {\n    this.x = undefined;\n    this.y = undefined;\n    this.dx = undefined;\n    this.dy = undefined;\n    this.radius = undefined;\n    this.row = undefined;\n    this.col = undefined;\n    this.currentPlace = undefined;\n    this.alive = undefined;\n    this.victory = undefined;\n    this.lastkey = undefined;\n  }\n  pickImage() {\n    if (this.direction === 'right') {\n      this.image = shovelRight;\n    } else if (this.direction === 'left') {\n      this.image = shovelLeft;\n    } else if (this.direction === 'down') {\n      this.image = shovelDown;\n    } else {\n      this.image = shovelRight;\n    }\n  }\n  checkBoundary() {\n    const currentTile = this.getPlayerTile();\n    if (currentTile instanceof _boundary_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n      this.alive = false;\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Playertwo);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/playertwo.js\n");

/***/ }),

/***/ "./src/scripts/tile.js":
/*!*****************************!*\
  !*** ./src/scripts/tile.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Tile {\n  static size = 50;\n  constructor(row, col) {\n    this.row = row;\n    this.col = col;\n    this.size = Tile.size;\n    this.health = 3;\n    this.visible = true;\n    this.occupied = false;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Tile);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy90aWxlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxJQUFJLENBQUM7RUFDVCxPQUFPQyxJQUFJLEdBQUcsRUFBRTtFQUVoQkMsV0FBV0EsQ0FBQ0MsR0FBRyxFQUFFQyxHQUFHLEVBQUU7SUFDcEIsSUFBSSxDQUFDRCxHQUFHLEdBQUdBLEdBQUc7SUFDZCxJQUFJLENBQUNDLEdBQUcsR0FBR0EsR0FBRztJQUNkLElBQUksQ0FBQ0gsSUFBSSxHQUFHRCxJQUFJLENBQUNDLElBQUk7SUFDckIsSUFBSSxDQUFDSSxNQUFNLEdBQUcsQ0FBQztJQUNmLElBQUksQ0FBQ0MsT0FBTyxHQUFHLElBQUk7SUFDbkIsSUFBSSxDQUFDQyxRQUFRLEdBQUcsS0FBSztFQUN2QjtBQUNGO0FBRUEsK0RBQWVQLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcGxlZWYvLi9zcmMvc2NyaXB0cy90aWxlLmpzPzBlYmQiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgVGlsZSB7XHJcbiAgc3RhdGljIHNpemUgPSA1MDtcclxuXHJcbiAgY29uc3RydWN0b3Iocm93LCBjb2wpIHtcclxuICAgIHRoaXMucm93ID0gcm93O1xyXG4gICAgdGhpcy5jb2wgPSBjb2w7XHJcbiAgICB0aGlzLnNpemUgPSBUaWxlLnNpemU7XHJcbiAgICB0aGlzLmhlYWx0aCA9IDM7XHJcbiAgICB0aGlzLnZpc2libGUgPSB0cnVlO1xyXG4gICAgdGhpcy5vY2N1cGllZCA9IGZhbHNlO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVGlsZTsiXSwibmFtZXMiOlsiVGlsZSIsInNpemUiLCJjb25zdHJ1Y3RvciIsInJvdyIsImNvbCIsImhlYWx0aCIsInZpc2libGUiLCJvY2N1cGllZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/tile.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcGxlZWYvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;